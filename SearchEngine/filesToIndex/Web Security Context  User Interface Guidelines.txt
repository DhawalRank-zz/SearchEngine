"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 15.3), see www.w3.org" />"text/html; charset=utf-8" />Web Security Context: User Interface Guidelines"#status" />"#contents" />"#conformance-products" />"#conformance-language" />"#conformance-levels" />"#conformance-basic" />"#conformance-advanced" />"#conformance-claims" />href="#concepts" />"#interaction-overview" />"#definitions" />"#def-user-agent" />"4.2.1 Common User Interface elements" href="#common-widgets" />"#def-primary-chrome" />"#def-secondary-chrome" />"#def-locationbar" />"#def-identity-information" />"#tlsforweb" />"5.1 Certificate Handling and Information" href="#tlstosecurehttp" />"5.1.1 Interactively accepting trust anchors or certificates"href="#sec-interactively" />"#def-interactively" />"5.1.2 Augmented Assurance Certificates" href="#sec-evcert" />"#def-augmented-assurance-cert" />"#sec-validated-certificates" />"#def-validated-cert" />"5.1.4 Self-signed Certificates and Untrusted Root Certificates"href="#selfsignedcerts" />"#typesoftls" />"#def-http-transaction" />"#def-tls-protected" />"#def-strong-tls" />"#def-strong-algos" />"#securepage" />"#def-secure-page" />"#def-mixed-content" />"#errorconditions" />"#sec-tlserrors" />"5.4.2 Error Conditions based on Third Party or Heuristic Information"href="#errors-blacklists" />href="#insecure-form-submission" />"#indicators" />"6.1 Identity and Trust Anchor Signaling" href="#IdentitySignal" />"#identity-requirement" />href="#signal-content" />"6.2 Additional Security Context Information" href="#pageinfosummary" />"#pageinfo-domain" />"#pageinfo-owner" />"#pageinfo-verifier" />"#pageinfo-trustroots" />"#pageinfo-weak" />"#pageinfo-history" />"#pageinfo-storedcreds" />"#pageinfo-auth" />"#pageinfo-when-first" />"#pageinfo-how-often" />"#sec-tls-indicator" />href="#error-handling" />"6.4.1 Common Error Interaction Requirements" href="#error-common" />href="#error-warning" />"#error-danger" />"#Robustness" />href="#keepchromevisible-goodpractice" />"7.2 Do not mix content and security indicators" href="#site-identifying" />"#interaction-flooding" />"#prevent-click-thru" />"#robustness-apis" />"7.4.1 Obscuring or disabling Security User Interfaces" href="#robustness-apis-obscure-security-ui" />"#prevent-obscuring" />"#restrict-window-resizing" />"#prevent-new-windows" />"#prevent-overlaying-chrome" />"#robustness-software-install" />"#prevent-api-exposure" />"#prevent-installation" />"#robustness-bookmarks" />"#bookmark-api-userconsent" />"#bookmark-api-uri-match" />"#popups" />"#prevent-newwindows" />"#offer-extended-perm" />"#security-considerations" />"8.1 Active attacks during initial TLS interactions" href="#mitm-initial" />"8.2 Certificate Status Checking Failures" href="#cert-status-check-failures" />"8.3 Certificates assure identity, not security" href="#certs-assure-identity" />"8.4 Binding "human readable" names to domain names"href="#security-considerations-petnames" />"#security-considerations-warning-fatigue" />"8.6 Mixing Augmented Assurance and Validated Certificates" href="#security-considerations-ev-dv" />"8.7 Dynamic content might change security properties" href="#dynamic-content" />href="#Terms" />/**/code { font-family: monospace; }div.constraint,div.issue,div.note,div.notice { margin-left: 2em; }ol.enumar { list-style-type: decimal; }ol.enumla { list-style-type: lower-alpha; }ol.enumlr { list-style-type: lower-roman; }ol.enumua { list-style-type: upper-alpha; }ol.enumur { list-style-type: upper-roman; }div.exampleInner pre { margin-left: 1em;margin-top: 0em; margin-bottom: 0em}div.exampleOuter {border: 4px double gray;margin: 0em; padding: 0em}div.exampleInner { background-color: #d5dee3;border-top-width: 4px;border-top-style: double;border-top-color: #d3d3d3;border-bottom-width: 4px;border-bottom-style: double;border-bottom-color: #d3d3d3;padding: 4px; margin: 0em }div.exampleWrapper { margin: 4px }div.exampleHeader { font-weight: bold;margin: 4px}[id]:hover:after {content: " #" attr(id) " ";font-size: 80%;color: #ccc;text-decoration: none;}a.borken {background: #f99;color: #000;font-weight: bold;}p[id]:hover:after {content: "";}a.anchor {color: inherit;font-weight: inherit;text-decoration: none;font-style: inherit;}p[id]:hover:after {content: " #" attr(id) " Â¶ ";font-size: 80%;color: #ccc;text-decoration: none;}div.note {font-weight: bold;font-style: italic;color: #008000;border-left: 2px solid #008000;margin-left: 0;padding-left: 2em;}span.sqbrackets {font-style: italic;color: #005000;}div.exampleOuter {padding-left: 2em;padding-right: 2em;border: 1px solid black;background: #ffa;}/*]]>*/"http://www.w3.org/StyleSheets/TR/W3C-REC.css" />"http://www.w3.org/Icons/w3c_home" alt="W3C" height="48" width="72" />WebSecurity Context: User Interface Guidelinesclass="anchor">W3C Recommendation 12 August 2010This version:"http://www.w3.org/TR/2010/REC-wsc-ui-20100812/">http://www.w3.org/TR/2010/REC-wsc-ui-20100812/Latest version:"http://www.w3.org/TR/wsc-ui/">http://www.w3.org/TR/wsc-ui/Previous version:"http://www.w3.org/TR/2010/PR-wsc-ui-20100622/">http://www.w3.org/TR/2010/PR-wsc-ui-20100622/Editors:Thomas Roessler,"http://www.w3.org/">W3CAnil Saldhana,"http://www.redhat.com/">RedHatPlease refer to the errata for this document, which may include some normative corrections.See also translations."http://www.w3.org/Consortium/Legal/ipr-notice#Copyright">Copyright Â© 2010 W3CÂ®("Massachusetts Institute of Technology">MIT,"European Research Consortium for Informatics and Mathematics">ERCIM,Keio), All RightsReserved. W3C"http://www.w3.org/Consortium/Legal/ipr-notice#Legal_Disclaimer">liability,"http://www.w3.org/Consortium/Legal/ipr-notice#W3C_Trademarks">trademarkand"http://www.w3.org/Consortium/Legal/copyright-documents">documentuse rules apply."anchor">AbstractThis specification defines guidelinesand requirements for the presentation and communication of Websecurity context information to end-users."anchor">Status of this DocumentThis section describes the status of this document at the time of its publication. Other documents may supersede this document. A list of current W3C publications and the latest revision of this technical report can be found in the W3C technical reports index at http://www.w3.org/TR/.Please see the Working Group's"wsc-impl.html">implementation report.To frame its development of this specification, the WorkingGroup had previously published a use case note"#ref-wsc-usecases">[WSC-USECASES]. This specificationaddresses most of the use cases and issues documented in thatnote by documenting best existing practice, with the followingexceptions:This specification does not include advice for web siteauthors.This specification does not provide advice to addressthe issue explained in sections"http://www.w3.org/TR/2008/NOTE-wsc-usecases-20080306/#extended-chrome">9.1.2 Visually extending the chrome and"http://www.w3.org/TR/2008/NOTE-wsc-usecases-20080306/#information-bar">9.2.7 Information bar (aka: notification bar).Additionally, section"http://www.w3.org/TR/2008/NOTE-wsc-usecases-20080306/#usability-testing">10.4 Implementation and testing of"#ref-wsc-usecases">[WSC-USECASES] articulated anexpectation that the recommendations in this specificationwould be subject to usability testing, at least on a lowfidelity level, and that such testing would form part of theCandidate Recommendation exit criteria. Resources available tothe Working Group at this point will not permit the group toconduct extensive usability testing. At the same time, thefocus of this specification has shifted toward documenting bestexisting practice.This document was developed by the"http://www.w3.org/2006/WSC/">Web Security Context WorkingGroup. For a list of changes to this document since itsProposed Recommendation version, please refer to the"diff.html">diff document. All changes were editorial innature.Please send comments about this document to"mailto:public-usable-authentication@w3.org">public-usable-authentication@w3.org(with"http://lists.w3.org/Archives/Public/public-usable-authentication/">public archive).This document has been reviewed by W3C Members, by software developers, and by other W3C groups and interested parties, and is endorsed by the Director as a W3C Recommendation. It is a stable document and may be used as reference material or cited from another document. W3C's role in making the Recommendation is to draw attention to the specification and to promote its widespread deployment. This enhances the functionality and interoperability of the Web.This document was produced by a group operating under the"http://www.w3.org/Consortium/Patent-Policy-20040205/">5February 2004 W3C Patent Policy. W3C maintains a"disclosure" href="http://www.w3.org/2004/01/pp-impl/39814/status">public list ofany patent disclosures made in connection with thedeliverables of the group; that page also includes instructionsfor disclosing a patent."anchor">Table of Contents1 Overview2 Acknowledgments3 Conformance    3.1"#conformance-products">Product classes    3.2"#conformance-language">Language conventions    3.3"#conformance-levels">Conformance levels    3.4"#conformance-claims">Conformance claims4 Interaction and content model    4.1"#interaction-overview">Overview    4.2 Terms anddefinitions        4.2.1"#common-widgets">Common User Interface elements5 Applying TLS to the Web    5.1"#tlstosecurehttp">Certificate Handling andInformation        5.1.1"#sec-interactively">Interactively accepting trust anchors orcertificates        5.1.2"#sec-evcert">Augmented Assurance Certificates        5.1.3"#sec-validated-certificates">Validated Certificates        5.1.4"#selfsignedcerts">Self-signed Certificates and Untrusted RootCertificates    5.2 Types ofTLS    5.3 MixedContent    5.4 Errorconditions        5.4.1"#sec-tlserrors">TLS errors        5.4.2"#errors-blacklists">Error Conditions based on Third Party orHeuristic Information        5.4.3"#insecure-form-submission">Insecure form submission6 Indicators and Interactions    6.1 Identityand Trust Anchor Signaling        6.1.1"#identity-requirement">Identity Signal        6.1.2"#signal-content">Identity Signal Content    6.2"#pageinfosummary">Additional Security ContextInformation    6.3 TLSindicator    6.4 Errorhandling and signaling        6.4.1"#error-common">Common Error Interaction Requirements        6.4.2"#error-warning">Warning/Caution Messages        6.4.3"#error-danger">Danger Messages7 Robustness Best Practices    7.1"#keepchromevisible-goodpractice">Keep Security ChromeVisible    7.2 Do notmix content and security indicators    7.3"#interaction-flooding">Managing User Attention    7.4 APIsExposed To Web Content        7.4.1"#robustness-apis-obscure-security-ui">Obscuring or disablingSecurity User Interfaces        7.4.2"#robustness-software-install">Software Installation        7.4.3"#robustness-bookmarks">Bookmarking APIs        7.4.4"#popups">Pop-up Window APIs8 SecurityConsiderations    8.1 Activeattacks during initial TLS interactions    8.2"#cert-status-check-failures">Certificate Status CheckingFailures    8.3"#certs-assure-identity">Certificates assure identity, notsecurity    8.4"#security-considerations-petnames">Binding "human readable"names to domain names    8.5"#security-considerations-warning-fatigue">WarningFatigue    8.6"#security-considerations-ev-dv">Mixing Augmented Assurance andValidated Certificates    8.7 Dynamiccontent might change security properties9 Terms defined in this document10 References"anchor">1 OverviewThis specification deals with the trust decisions thatusers must make online, and with ways to support them inmaking safe and informed decisions where possible.In order to achieve that goal, this specification includesrecommendations on the presentation of identity informationby user agents, 6.1.1Identity Signal. We also include recommendations onconveying error situations in security protocols. The errorhandling recommendations both minimize the trust decisionsleft to users, and represent known best practice in inducingusers toward safe behavior where they have to make thesedecisions. To complement the interaction and decision relatedparts of this specification, 7Robustness Best Practices addresses the question ofhow the communication of context information needed to makedecisions can be made more robust against attacks.This document specifies user interactions with a goaltoward making security usable, based on known best practicein this area. This document is intended to provide userinterface guidelines. Most sections assume the audience has acertain level of understanding of the core PKI (Public KeyInfrastructure) technologies as used on the Web. Thefollowing sections are relevant to all readers and do notrequire a thorough understanding of PKI:"#Conformance">3 Conformance,"#concepts">4 Interaction and content model,6 Indicators andInteractions, 6.4 Errorhandling and signaling, 7Robustness Best Practices and"#security-considerations-warning-fatigue">8.5 WarningFatigue. Since this document is part of the W3Cspecification process, it is written to clearly lay out therequirements and options for conforming to it as a standard.User interface guidelines that are not intended for use asstandards do not have such a structure. Readers more familiarwith that latter form of user interface guideline areencouraged to read this specification as a way to avoid knownmistakes in usable security.This specification comes with two companion documents:[WSC-USECASES] documents theinitial assumptions about the scope of this specification. Italso includes an initial set of use cases the Working Groupdiscussed. [WSC-THREATS]documents the Working Group's initial threat analysis. Thisdocument is based on current best practices in deployed useragents, and covers the use cases and threats in thosedocuments to that extent."anchor">2 AcknowledgmentsThis specification is based on text from Mary Ellen Zurko,Stephen Farrell, Anil Saldhana, Ian Fette, Michael McCormick,Serge Egelman, Johnathan Nightingale, Yngve N. Pettersen,Luis Barriga, Hal Lockhart, Tyler Close, Bill Doyle, ThomasRoessler, as well as input and discussions from the activemembers of the Web Security Context Working Group, primarilyPhillip Hallam-Baker, Mike Beltzner, Joe Steele, Jan VidarKrey, Maritza Johnson, Rachna Dhamija and Dan Schutzer. Ithas also benefited from general public and working groupcommentary on earlier drafts."Conformance" class="anchor">3 Conformance"conformance-products" name="conformance-products" class="anchor">3.1 Product classesThis specification addresses"#def-user-agent">Web user agents as a product class.Web user agents and user agents are used synonymously inthis specification.This specification also addresses products that mightincorporate changes to a user agents, such as plug-ins,extensions, and others; they are summarily called ["def-plug-in" id="def-plug-in" title="">Definition:plug-ins] in this section.Such products that might incorporate changes to the useragent, e.g. through the addition or removal of features,can render an otherwise conforming user agent nonconforming, or vice versa."conformance-language" name="conformance-language" class="anchor">3.2 Language conventionsThroughout the specification, the RFC 2119"#ref-RFC2119">[RFC2119] keywords MUST, MUST NOT,SHOULD, SHOULD NOT, MAY are applied, with their respectivemeanings.name="conformance-levels" class="anchor">3.3 ConformancelevelsA user agent conforms to this specification at the["">Definition: basic level] if it honors all MUST andMUST NOT clauses of this specification.A user agent conforms to this specification at the[title="">Definition: advanced level] if it also honorsall SHOULD and SHOULD NOT clauses of thisspecification.Conformance of a plug-in is defined in terms of theconformance of the user agent that results when the plug-inis added to a base user agent. E.g., if a given user agentconforms to this specification on the basic level, and aplug-in adds features that lead to conformance on theadvanced level, then this plug-in conforms on the advancedlevel with respect to this base user agent.name="conformance-claims" class="anchor">3.4 ConformanceclaimsA claim about a Web user agent's conformance with thisspecification must state:Whether basic or advanced conformance is claimed (see3.3 Conformancelevels)What TLS [SSLv3]"#ref-tlsv11">[TLSv11]"#ref-tlsv12">[TLSv12] protocol versions andalgorithms are considered as"#def-strong-algos">strong TLS algorithms, and whatprotocol versions and algorithms are supported in TLSnegotiation, but not considered"#def-strong-algos">strong.What user interface element is the"#tls-indicator">TLS indicator defined in thisspecification.What user interface element is the"#def-identity-signal">identity signal defined inthis specification.What broadly accepted practices are consideredsufficient for a trust anchor to be deemed augmentedassurance qualified (see 5.1.2Augmented Assurance Certificates), and what dataelements are deemed assured by those certificates.What features beyond the claimed conformance levelthe user agent conforms with.A claim about a plug-in's conformance with thisspecification must include all of the above, and alsoidentify the base user agent with respect to whichconformance is claimed."anchor">4 Interaction and content model"interaction-overview" name="interaction-overview" class="anchor">4.1 OverviewThis specification assumes a human user interacting witha Web user agent,interacting with Web resources. Many of the requirementsspecified are focused on the presentation of securitycontext information to the user, and therefore directlyrelate to user interfaces. Where requirements or techniquesare specific to certain modalities, these are madeexplicit, and are part of the preconditions for applyingthe requirement or technique.When this specification speaks of a Web user agent todescribe the application through which a user interactswith the Web, then this term is used on a conceptual level:No assumption is made about implementation details; the"Web user agent" may denote a combination of severalapplications, extensions to such applications, operatingsystem features, and assistive technologies.A common user agent will therefore be a web browser withsome number of plug-ins, extensions, call outs to externalsystems which render particular document formats, andassistive technologies.This specification makes no specific assumption aboutthe content with which the user interacts, except for one:There is a top-level Webpage that is identified by a URI"#ref-URI">[RFC3986]. This Web page might be an HTMLframeset, an application running on top of a proprietaryrun-time environment, or a document in a format interpretedby plug-ins or external systems served as part of a Webinteraction. The page's behavior might be determined byscripting, stylesheets, or other mechanisms.In interactive Web applications, the presentation to theuser might also depend on state that is local to the client- be it local storage of structured data, or be it recentinteractions with the Web page. The security properties ofthose data will depend on the security properties of theclient computer itself, and are out of scope for thisspecification.Some requirements are expressed in terms of userinterface components commonly found in current-generationWeb user agents.4.2 Terms anddefinitions is expected to be consistent with theWeb Content Accessibility Guidelines Version 2,"#ref-WCAG2">[WCAG20]."definitions" class="anchor">4.2 Terms anddefinitions["">Definition: A Web User Agent is any softwarethat retrieves and presents Web content for users.]["">Definition: A Web Page is a resource that isreferenced by a URI and is not embedded in anotherresource, plus any other resources that are used in therendering or intended to be rendered together with it.]"common-widgets" class="anchor">4.2.1 Common UserInterface elementsThis section defines terms for user interface elementscommonly present in"#def-user-agent">Web User Agents.[title="">Definition: Primary User Interfacedenotes the portions of a"#def-user-agent">Web user agent's user interfacethat are available to users without being solicited by auser interaction.]Examples of primary user interface include thelocation bar in common Web user agents, the "padlock"icon present in common Web user agents, or error pagesthat take the place of a Web page that could not beretrieved.["def-secondary-chrome" title="">Definition:Secondary User Interface denotes the portions of aWeb user agent'suser interface that are available to the user after theyare solicited by a specific user interaction.]Examples of secondary user interface include the "PageInformation" dialog commonly found in Web user agents,and the "Security Properties" dialog that can obtained byclicking the padlock icon in common Web user agents.We occasionally use the term ["def-chrome" title="">Definition: chrome] torefer to the representation through which the userinteracts with the user agent itself, as distinct fromthe accessed web content. This includes both primary andsecondary user interface.["">Definition: Location Bar is a widget in aWeb user agent's user interface which displays (and oftenallows input of) the textual location (entered as a URI)of the resource being requested (or displayed - after theresponse is received).]["def-identity-information" title="">Definition:Identity Information is information about the website which is used to present the identity signal.]class="anchor">5 Applying TLS to the Web"tlstosecurehttp" class="anchor">5.1 Certificate Handlingand InformationPublic key certificates (see"#ref-PKIX">[PKIX]) are widely used in TLS"#ref-sslv3">[SSLv3] [TLSv11][TLSv12], but have been the basisfor the generation of many inappropriate warnings and otherdialogs for users. This section describes somemodifications to current certificate processing aimed atimproving this aspect of handling web security context anddefines some new terms describing various cases related tocertificate handling in user agents.User agents can base their acceptance of certificatesthat are presented by Web servers on various sources,including user action, previous interactions involving thesame certificate, or, as more traditionally assumed, onvalidation of a certificate chain where each certificate isissued by a Certification Authority (CA). The practicesused by CAs (and the information attested) vary by CA andare not available in any useful sense to Web useragents.name="sec-interactively" class="anchor">5.1.1Interactively accepting trust anchors orcertificatesA trust anchor represents an authoritative entityrepresented by a public key and associated data. Thepublic key is used to verify digital signatures and theassociated data is used to constrain the types ofinformation for which the trust anchor is authoritative.Relying parties use trust anchors to determine ifdigitally signed information objects are valid byverifying digital signatures using the trust anchor'spublic key and by enforcing the constraints expressed inthe associated certificate data.Trust anchor installation is typically handled by useragent vendors, systems administrators and devicemanufacturers, based on out-of-band information. Notethat updating trust anchors is therefore often handled aspart of user agent or operating system softwareupdates.However, current user agents sometimes support theinteractive acceptance of a trust anchor during asession, based on user interaction. Most users cannotsensibly decide how to handle such interactions.Similarly, end-entity (e.g. web server) certificatesthat cannot be currently verified using the Basic PathValidation algorithm may trigger current user agents tooffer the user a choice to accept the certificate in anycase, sometimes for a single session, sometimes for allfuture sessions involving that certificate, possiblyscoped to specific host and port combinations.[title="">Definition: A trust anchor or certificate isinteractively accepted if the acceptance wascaused through a user interaction that happens while theuser is focused on a primary task unrelated to trust andcertificate management.]For example, if a web server certificate is presentedfor acceptance by a user during ordinary Webinteractions, and is accepted by the user, then thismatches the test for interactive acceptance. If, however,a systems administrator (or user) adds a trust anchor'scertificate to an agent's store of trust roots, then thatcertificate is not considered interactively accepted."sec-evcert" class="anchor">5.1.2 Augmented AssuranceCertificatesSome trust anchors adhere to documented broadlyaccepted practices (e.g."#ref-EV">[EVTLSCERT]). These involve some level ofguarantee that certificates chaining up to those rootsembody augmented assurance and can therefore be treatedmore favorably in terms of the primary securityindicators. We call such certificates "AugmentedAssurance Certificates".["def-augmented-assurance-cert" title="">Definition:An Augmented Assurance Certificate is a public keycertificate where the issuer asserts that the subjectentity has been authenticated by means of some processthat adheres to the requirements of an augmentedassurance specification supported by the user agent. Thecertificate chain for such a certificate MUST bevalidated up to a trust root that is recognized asaugmented assurance qualified by the user agent.]This specification does not define what an "augmentedassurance qualified trust root" is, except to note thatthis designation is made by user agents through an out ofband mechanism consistent with the relevant underlyingaugmented assurance specification.Marking a trust anchor as augmented assurancequalified is a security-critical step and most often willinvolve the use of some application-specific out-of-bandmechanism.Implementations MUST NOT enable users todesignate trust roots as augmented assurance qualified aspart of a unrelated interaction. In particular,the notions of an augmented assurance qualified trustroot and an"#def-interactively">interactively accepted trustroot are mutually exclusive.In addition to the out of band designation processdescribed above, the trust anchor, and possibly allcertificates in a path chaining up to such a trust anchormay need to be specially marked, e.g. through the use ofspecific policy object identifiers.The specific marking mechanisms to be used and thespecial treatment to be afforded to such certificates areout of scope of this document, but will typically becovered by the underlying augmented assurancespecification. User agent implementers determine the setof such standards that they support and the associatedspecial treatment to apply, other than as outlined below,where we impose some consistency requirements on thehandling of this type of certificate.To derive a human-readable subject namefrom an augmented assurance certificate, user agentsSHOULD use the Subject field's Organization (O) andCountry (C) attributes. They MUSTuse information that is subject to the certificateauthority's additional assurances, as documented in theuser agent's conformance statement.Note: Should certificates arise in the future thatprovide strong assurance of the holder's identity, but donot include an organization attribute, then user agentscan make use of the additional assurance level andidentity information without violating thisspecification. Such future certificates could, forexample, include high assurance certificates forindividuals."sec-validated-certificates" name="sec-validated-certificates" class="anchor">5.1.3Validated CertificatesThe term ["def-validated-cert" title="">Definition:validated certificate ] is used to denote a publickey certificate that has been verified by chaining up toa locally configured trust anchor. The set of trustanchors used by a given Web User agent isimplementation-dependent.Since Augmented Assurance Certificates chain up to a"special" trust anchor, all valid Augmented AssuranceCertificates are also validated certificates.Certificates or certificate chains that are"" href="#def-pinned-cert">pinned to a particulardestination are not considered validatedcertificates by virtue of being pinned.The notion of a validated certificate in thisspecification corresponds to the domain validatedcertificate commonly deployed on the Web. This type ofcertificate attests to a binding between a domain nameregistration and a key pair; additional certificateattributes are often not validated."selfsignedcerts" class="anchor">5.1.4 Self-signedCertificates and Untrusted Root CertificatesSelf-signed certificates (SSC) which are not trustanchors by themselves are commonly used for appliancesand web sites catering to small groups of users, andessentially serve as a container for cryptographic keymaterial in a key exchange that is not verified by anythird party. Certificate chains that lead up to customroot certificates which are not part of the user agent'sstore of trust roots are sometimes used similarly.In both situations, use of TLS providesconfidentiality protection services against passiveattackers. No binding of a third-party asserted identityto the cryptographic key is achieved. In both cases, thecertificates are not considered"#def-validated-cert">validated certificates.Using Key Continuity Management"#ref-gutmann-kcm">[KCM], user agents can useself-signed certificates (or certificates that chain upto an untrusted root) to determine that they areconsistently communicating with the same end entity,thereby defending against active attacks as well. Simplyput, if a Web site consistently presents the sameself-signed certificate (or the same certificate chainingup to the same untrusted root) to a client, then this canbe strong evidence that protection against an activeattacker has been achieved as well. Conversely, a changeof certificates for the same site can be evidence that aman in the middle attack occurs -- or it can merelyindicate that the legitimate site has changed to adifferent certificate.User agents MAY support ["def-pinned-cert" id="def-pinned-cert" title="">Definition: pinning] a self-signedcertificate or more generally a certificate chain thatleads to an untrusted root certificate to a particularWeb site, to enable behavior based on recorded stateabout certificates shown previously by the samesite. Such behavior includes, e.g., warning usersabout changes of certificates, and not showing warningmessages if a site shows a certificate consistent withprevious visits."#def-interactively">The interaction that enablesusers to pin a certificate to a destination SHOULD NOTcause a self-signed certificate to be pinned to more thanone site, identified through URI scheme, domain, andport. The interaction MUST NOTcause an untrusted root certificate to be acceptedautomatically for additional sites.class="anchor">5.2 Types of TLSThe most common mechanism for applying TLS to the Web isthe use of the https URI scheme"#ref-RFC2818">[RFC2818]; the alternative upgrademechanism [RFC2817] is usedrarely, if at all. For the purposes of this specification,the most relevant property of"#ref-RFC2818">[RFC2818] is that the URI used toidentify a resource includes an assertion that use of TLSis desired.This specification uses the term ["def-http-transaction" id="def-http-transaction" title="">Definition: HTTP transaction ] regardless ofwhether any kind of TLS protection was applied; inparticular, the transactions arising when anhttps URI is dereferenced are subsumed underthis term. [RFC2616][title="">Definition: An HTTP transaction isTLS-protected if the resource was identified througha URI with the https URI scheme, the TLS handshake wasperformed successfully, and the HTTP transaction hasoccurred through the TLS channel.]Note that an HTTP transaction may be consideredTLS protectedeven though weak algorithms (including NULLencryption) are negotiated.["">Definition: An HTTP transaction is stronglyTLS-protected if it is"#def-tls-protected">TLS-protected, an https URL wasused, strong TLSalgorithms were negotiated for both confidentiality andintegrity protection, and at least one of the followingconditions is true:]the server used a"#def-validated-cert">validated certificate thatmatches the dereferenced URI; orthe server used a self-signed certificate that waspinned to thedestination; orthe server used a certificate chain leading to anuntrusted root certificate that was"#def-pinned-cert">pinned to the destination.TLS modes that do not require the server to show acertificate (such as the DH_anon mode) do notlead to a strongly TLS-protected transaction.The ability to provide privacy and secure the connectionbetween a user agent and web server is in part determinedby the strength and capabilities of the TLS protocol andunderlying cryptographic mechanisms. The TLS protocol isversioned to keep pace with protocol features and ciphersuites that are available. Cipher suites are groupedaccording to algorithms and the key length used bycryptographic functions to provide cipher strength.When this document speaks of [id="def-strong-algos" title="">Definition: Strong TLSalgorithms], then the following must hold:No version of the TLS protocol that suffers knownsecurity flaws has been negotiated. Atthe point of writing of this document, versions of SSLprior to SSLv3 [SSLv3] MUST NOTbe considered strong.A cipher suite has been selected for which key andalgorithm strengths correspond to industry practice.At the time of writing of this document,the "export" cipher suites explicitly forbidden inappendix A.5 of [TLSv11] MUSTNOT be considered strong.What set of algorithms is considered as strong by agiven implementation must be described in any conformanceclaim against this specification, see"#conformance-claims">3.4 Conformanceclaims.["">Definition: An HTTP transaction is weaklyTLS-protected if it is TLS-protected, but strong TLSprotection could not be achieved for one of the followingreasons:]TLS handshake used an anonymous key exchangealgorithm such as DH_anonthe cryptographic algorithms negotiated are notconsidered"#def-strong-algos">strongcertificates were used that are not either"" href="#def-validated-cert">validated certificates,or self-signed certificates"#def-pinned-cert">pinned to the destination (see5.1.4 Self-signedCertificates and Untrusted RootCertificates)WeaklyTLS-protected interactions may provide securityservices such as confidentiality protection against passiveattackers, or integrity protection against active attackers(without confidentiality protection). These properties areoften desirable, even if"#def-strong-tls">strong TLS protection cannot beachieved.class="anchor">5.3 Mixed ContentIf a given Web page consists of a single resource only,then all content that the user interacts with has securityproperties derived from the HTTP transaction used toretrieve the content.["">Definition: A Web page is called TLS-securedif the top-level resource and all other resources that canaffect or control the page's content and presentation havebeen retrieved through strongly TLS protected HTTPtransactions. ][title="">Definition: A Web page is called mixedcontent if the top-level resource was retrieved througha strongly TLS protected HTTP transaction, but somedependent resources were retrieved through a weaklyprotected or unprotected HTTP transaction.]This definition implies that inline images, stylesheets,script content, and frame content for a secure page need tobe retrieved through"#def-strong-tls">strongly TLS protected HTTPtransactions in order for the overall page to be consideredTLS-secured.Any UI indicator used to signal thepresence of Augmented Assurance certificates MUST NOTsignal the presence of such a certificate, unless the pageis TLS-secured,i.e., all parts of the page are loaded from serverspresenting at least a"#def-validated-cert">validated certificate, overstrongly TLS-protectedinteractions.For relevant security considerations, see"#security-considerations-ev-dv">8.6 Mixing AugmentedAssurance and Validated Certificates."errorconditions" class="anchor">5.4 Errorconditions"sec-tlserrors" class="anchor">5.4.1 TLS errorsThis section covers TLS-related error conditions, andmaps them to the classes of error handling interactions(see 6.4 Error handling andsignaling) that are used when these conditionsarise.If multiple error conditions apply, themost severe signaling level currently known MUST be used,as defined in 6.4 Errorhandling and signaling.When, during TLS negotiation, the certificate chainpresented by the server does not lead to a trusted rootcertificate, and the certificate chain presented was notpinned to thedestination, the following applies:Error signaling of class warning orhigher (6.4.2Warning/Caution Messages ,"#error-danger">6.4.3 Danger Messages) MUSTbe used to signal the error condition.User agents MAY offer a possibilityto pin newly encountered certificates to thedestination.Note that, when untrusted certificates are acceptedwithout user interaction, an additional exposure toman-in-the-middle attacks is created. See"#mitm-initial">8.1 Active attacks during initial TLSinteractions for a more detailed discussion ofthis scenario.When certificate information ispresented in the interactions described in this section,then human-readable information from certificates MUSTNOT be presented as trustworthy unless it is attested.E.g., a self-signed certificate's Common Name orOrganization attribute MUST NOT be displayed, even ifthat certificate is pinned to a destination.User agents MAY display this information ina dialog or other secondary user interfaces reachablefrom the warning or error messages specifiedhere.When, during TLS negotiation, theend-entity certificate presented or one of theintermediate certificates in the certificate chain arefound to have been revoked, error signaling of classdanger (6.4.3 DangerMessages) MUST be used.When, during TLS negotiation, theend-entity certificate presented or one of theintermediate certificates in the certificate chain arefound to have expired, error signaling of class danger(6.4.3 DangerMessages) MUST be used.When the URI corresponding to thetransaction does not match the end-entity certificatepresented, and a"#def-validated-cert">validated certificate is used,then error signaling of level danger ("#error-danger">6.4.3 Danger Messages) MUST beused.If TLS negotiation otherwise fails,error signaling of level danger ("#error-danger">6.4.3 Danger Messages) MUST beused.When TLS error conditions occur, useragents MAY choose to abort the connection without anyfurther user interaction. The guidelines in thissection apply when user agents choose to cause a userinteraction in the case of TLS error conditions. Notethat user agents may combine both practices: E.g., aninteractive approach may be chosen for the top-levelframe of a Web page, but a non-interactive approach maybe chosen for inline content. It is expected that theXMLHttpRequest specification [XHR]will include a non-interactive approach as well.name="errors-blacklists" class="anchor">5.4.2 ErrorConditions based on Third Party or HeuristicInformationUser agents that use third partyservices or heuristic approaches to assess the possibledanger of a pending Web transaction MUST use errorsignaling of class danger ("#error-danger">6.4.3 Danger Messages) tosignal positively identified dangers, e.g., identifiedmalicious downloads or exploits of user agentvulnerabilities.To signal risks that are identifiedwith high likelihood, but involve further user decisions(e.g., phishing heuristics were triggered), errorsignaling of class warning or above ("#error-warning">6.4.2 Warning/CautionMessages , 6.4.3Danger Messages) MUST be used."insecure-form-submission" name="insecure-form-submission" class="anchor">5.4.3 Insecureform submissionUsers interacting with a"#def-secure-page">TLS-secured page are likely todevelop the impression that information submitted duringthese interactions will be"#def-strong-tls">strongly TLS-protected."XXIV">User agents MAY warn users, using an error ofclass Warning or higher ("#error-warning">6.4.2 Warning/CautionMessages , 6.4.3Danger Messages), if form submissions from aTLS-secured page are directed to an unsecuredchannel.class="anchor">6 Indicators and Interactions"IdentitySignal" class="anchor">6.1 Identity and TrustAnchor SignalingThis section specifies practices for signalinginformation about the identity of the Web site a userinteracts with. All signals specified in this section arepassive. No claim is made about the effectiveness of thesesignals to counter impersonation attacks."identity-requirement" name="identity-requirement" class="anchor">6.1.1 Identity SignalUser agents MUST make information aboutthe identity of the Web site that a user interacts withavailable. This ["def-identity-signal" id="def-identity-signal" title="">Definition: identity signal ] SHOULD bepart of primaryuser interface during usage modes which entail thepresence of signaling to the user beyond only presentingpage content. Otherwise, it MUST be available throughsecondary user interface. Note that there may beusage modes during which this requirement does not apply:For example, a Web agent which is interactively switchedinto a presentation mode that does not display any chromeneed not preserve security indicators in primary userinterface. On the other hand, a user agent such as asmart phone, individual entertainment screen in anairplane seat back, or TV set which has a usage mode thatmakes minimal (but visible) chrome elements availabledoes need to preserve security indicators in such amode.User agents with a visual userinterface MUST show the Identity Signal in a consistentvisual position. Web Content MUSTNOT obscure security user interface,"#robustness-apis-obscure-security-ui">7.4.1 Obscuringor disabling Security User Interfaces."signal-content" class="anchor">6.1.2 Identity SignalContentInformation displayed in theidentitysignal MUST be derived from"#def-validated-cert">validated certificates, or fromuser agent state. Web user agentsMUST NOT use information as part of the"#def-identity-signal">identity signal that is takenfrom unauthenticated or untrusted sources.During interactions with a"#def-secure-page">TLS-secured Web page for which thetop-level resource has been retrieved through a"" href="#def-strong-tls">strongly TLS-protectedinteraction that involves an"#def-augmented-assurance-cert">augmented assurancecertificate, and for which all dependent resourceshave been retrieved through interactions that involvevalidatedcertificates, the following applies:The"#def-identity-signal">identity signal MUSTinclude human-readable information about thecertificate subject, derived as specified in"#sec-evcert">5.1.2 Augmented AssuranceCertificates, to inform the user about theowner of the Webpage.During interactions with a"#def-secure-page">TLS-secured Web page for which thetop-level resource has been retrieved through a"" href="#def-strong-tls">strongly TLS-protectedinteraction that involves a"#def-validated-cert">validated certificate(including an"#def-augmented-assurance-cert">augmented assurancecertificate), the following applies:If the identity signal does notinclude any other human readable information aboutthe identity of the certificate subject (derived,e.g., from an augmented assurance certificate), thenit MUST include an applicable DNS name that matcheseither the subject's Common Name attribute or itssubjectAltName extension."XXXVII">User agents MAY shorten such a DNS name bydisplaying only a suffix.To inform the user about theparty responsible for that information, the Issuerfield's Organization attribute MUST be displayed inthe Identity Signal, or in secondary user interfacethat is available through a consistent interactionwith the Identity Signal.Subject logotypes"#ref-RFC3709">[RFC3709] derived fromcertificates MUST NOT be rendered, unless thecertificate used is an"#def-augmented-assurance-cert">augmented assurancecertificate.Note that this behavior does not apply whenself-signed certificates or certificate chains that chainup to an untrusted root certificate are used.During interactions with ahref="#def-mixed-content">mixed content Web page, theidentitysignal MUST NOT include any site identity informationbeyond that which is in use for unprotected HTTPtransactions. In this situation,the identity signal MAY include indicators that point outany error conditions that occurred.During interactions with mixedcontent, user agents MUST NOT render any logotypes[RFC3709] derived fromcertificates."pageinfosummary" class="anchor">6.2 Additional SecurityContext InformationThis section describes additionalsecurity context information provided by"#def-user-agent">Web user agents."XLIV">Where security context information is provided inboth primary and secondary interface, the meaning of thepresented information MUST be consistent. Bestpractice will also avoid inconsistent presentation, such asusing identical or semantically similar icons for differentinformation in different places.The information sources MUST make thefollowing security context information available:the Web page'sdomain nameOwnerinformation, consistent with section"#signal-content">6.1.2 Identity SignalContentVerifierinformation, consistent with section"#signal-content">6.1.2 Identity SignalContentThe reasonwhy the displayed information is trusted (or not).This includes whether or not a certificate was"" href="#def-interactively">accepted interactively,whether a self-signed certificate was used, and whetherthe self-signed certificate was"#def-pinned-cert">pinned to the site that the userinteracts with, and whether trust relevant settings ofthe user agent were otherwise overridden through useraction.The information sources SHOULD make thefollowing security context information available:An explanation ofthe information represented by the"#tls-indicator">TLS indicator, e.g.,concerning the presence mixed content;If the Web page is"#def-weak-tls">weakly TLS-protected, then, whatconditions cause the protection to be weak (e.g., badalgorithms, mixed content, ...)Whether the userhas visited the site in the past.Whether theuser has stored credentials for this site.Whether the sitecontent was encrypted in transmission.Whether the sitecontent was authenticated (e.g., server authenticationvia TLS).Additionally, the information sources MAYmake the following security context informationavailable:When the userfirst visited the site in the past.How often theuser visited the site in the past.User agents that provide informationabout the presence or absence of Cookies"#ref-COOKIES">[RFC2965] MUST NOT make any claims thatsuggest that the absence of cookies implies an absence ofany user tracking, as there are numerous tracking andsession management techniques that do not rely onCookies.name="sec-tls-indicator" class="anchor">6.3 TLSindicatorUser agents MUST make information aboutthe state of TLS protection available."LX">The ["">Definition: TLS indicator] SHOULD be part ofprimary user interface during usage modes which entail thepresence of signaling to the user beyond only presentingpage content. Otherwise, it MUST beavailable through secondary user interface. As inthe case of 6.1.1Identity Signal, there may be usage modes duringwhich this requirement does not apply. Webcontent MUST NOT obscure security interface, see"#robustness-apis-obscure-security-ui">7.4.1 Obscuringor disabling Security User Interfaces.User agents with a visual user interfaceSHOULD make the TLS indicator available in a consistentvisual position.The TLS indicator MUST present adistinct state that is used only for"#def-secure-page">TLS-secured Web pages.The User Agent SHOULD inform users whenthey are viewing a page that, along with all dependentresources, was retrieved through at least"#def-weak-tls">weakly TLS protected transactions,including mixedcontent.The user agent MAY accomplish this byusing a third state in the TLS indicator, or via anothermechanism (such as a dialog, info bar, or othermeans)."error-handling" class="anchor">6.4 Error handling andsignalingThis section defines common error interactionrequirements and, ordered by increasing severity, practicesto signal the following classes of errors:6.4.2 Warning/CautionMessages6.4.3 DangerMessagesUser agents MAY communicate additionalindicators to users. E.g., a user agent could additionallydisplay a persistent indicator in a "danger"situation.For additional security considerations concerningfrequent warning messages, see"#security-considerations-warning-fatigue">8.5 WarningFatigue."error-common" class="anchor">6.4.1 Common ErrorInteraction RequirementsError signaling that occurs as part ofprimary userinterface SHOULD be phrased in terms of threat touser's interests, not technical occurrence."#def-primary-chrome">Primary user interface errormessages MUST NOT be phrased solely in terms ofart. For example, if a certificate includes a DNSname in the subjectAltName extension that does not matchthe URI of the site that the user tries to visit, anerror message can explain that the user is reaching adifferent site, instead of reporting a "subjectAltNamemismatch".They SHOULD NOT tell the user toenter the destination site that caused the error, e.g.,to provide feedback or obtain assistance.For error messages that interrupt theuser's flow of interaction, user agents SHOULD enable theuser to easily return to the page that the user waspreviously interacting with. Note that thisideally implies returning to the previous user agentstate -- including the results of user input and dynamicprocessing --; however, this may not be feasible underall circumstances.For advanced users, errorinteractions SHOULD have an option to request a detaileddescription of the condition that caused the errorinteraction to occur.The error interactions discussed in this sectiontypically involve communication of security contextinformation."error-warning" class="anchor">6.4.2 Warning/CautionMessagesWarning / Caution messages areintended for situations when the system has good reasonto believe that the user may be at risk based on thecurrent security context information, but a determinationcannot positively be made.Warning / Caution messages MUSTinterrupt the user's current task, such that the user hasto acknowledge the message.Warning / Caution messages MUSTprovide the user with distinct options for how to proceed(i.e., these messages MUST NOT lead to a situation inwhich the only option presented to the user is to dismissthe warning and continue). Theoptions presented on these warnings MUST be descriptiveto the point that their respective meaning can beunderstood in the absence of any other informationcontained in the warning interaction."LXXX">One of the options offered SHOULD be recommended,and the warning message SHOULD include a succinct textcomponent denoting which option is recommended.In the absence of a recommended option,the warning MUST present the user with a method offinding out more information (e.g., a hyperlink,secondary window, etc) if the options cannot beunderstood."error-danger" class="anchor">6.4.3 DangerMessagesDanger Messages are intended forsituations when there is a positively identified dangerto the user (i.e., not merely a risk).The interactions communicatingthese messages MUST be designed such that the user's taskis interrupted.These interactions MUST be presentedin a way that makes it impossible for the user to go toor interact with the destination web site that caused thedanger situation to occur, without first explicitlyinteracting with the Danger Message.class="anchor">7 Robustness Best Practices"keepchromevisible-goodpractice" name="keepchromevisible-goodpractice" class="anchor">7.1 KeepSecurity Chrome VisibleFor visual user agents, agent chromeSHOULD always be present to signal security contextinformation. This requirement does not apply whenuser interface is explicitly dismissed by the user."site-identifying" class="anchor">7.2 Do not mix contentand security indicatorsTo the extent to which users pay attention to passivesecurity indicators at all, noticing and understanding themis made difficult to impossible when the same signal paththat is commonly used for security indicators can also becontrolled by Web content. For example, the location barcommonly found on agents is often used to both display the"padlock" security indicator, and a possible "favoriteicon" [FAVICON], which can inturn be a simple copy of the very padlock an informed andattentive user might look for.Web User Agents MUST NOT communicatepositive trust information using user interface elementswhich can be mimicked within chrome under the control ofweb content. Site-controlledcontent (e.g. page title, favicon) MAY be hosted inchrome, but this content MUSTNOT be displayed in a manner that confuses hosted contentand chrome indicators, by allowing that content to mimicchrome indicators in a position close to them. Thisrequirement applies to both"#def-primary-chrome">primary and"#def-secondary-chrome">secondary elements of visualuser interfaces.In particular, Web User Agents SHOULDNOT use a 16x16 image in chrome to indicate security statusif doing so would allow the favorite icon to mimicit."interaction-flooding" name="interaction-flooding" class="anchor">7.3 Managing User AttentionWhen confronted with multiple modal interactions duringa short amount of time, users are known to exercise thedefault option (e.g., by pressing the Enter key repeatedly)until the sequence of modal interactions stops blocking theuser's intended interaction.["">Definition: An Interaction flooding attackrefers to a Web site with the malicious intent ofperforming an unintended action (e.g. installing softwarethat would have required an user intervention such asclicking OK on a warning dialog) or by exploitingdistraction and task-focus. The Web site opens a largenumber of new windows over the desired web content and themalicious action is performed when the user tries to closethese new windows and/or clicks on a dialog that indicatesa trust decision. ]User interfacesused to inform users about security critical events or tosolicit input MUST employ techniques that prevent immediatedismissal of the user interface, e.g., by using atemporarily disabled "OK" button on user interfaces thatmake such an interaction paradigm available.When users interact with security relevantnotifications (6.4.2Warning/Caution Messages and above), Web contentMUST NOT be granted control of the user agent'sinteraction.A Web User Agent SHOULD NOT display amodal security dialog related to a web page which does notcurrently have focus. Security dialogs includeprompts for user credentials, script errors and TLSerrors."robustness-apis" class="anchor">7.4 APIs Exposed To WebContentUser agents commonly allow web content to performcertain manipulations of agent UI and functionality such asopening new windows, resizing existing windows, etc. topermit customization of the user experience. Thesemanipulations need to be constrained to prevent malicioussites from concealing or obscuring important elements ofthe agent interface, or deceiving the user into performingdangerous acts. This section includes requirements andtechniques to address known attacks of this kind."robustness-apis-obscure-security-ui" name="robustness-apis-obscure-security-ui" class="anchor">7.4.1 Obscuring or disabling Security UserInterfaceshref="#def-user-agent">Web user agents MUST preventweb content from obscuring, hiding, or disabling userinterfaces that display security context information,except in response to a user interaction.Useragents MUST restrict window sizing and moving operationsconsistent with section"#keepchromevisible-goodpractice">7.1 Keep SecurityChrome Visible. This prevents attackswherein agent chrome is obscured by moving it off theedges of the visible screen.User agentsMUST NOT allow web content to open new windows with theagent's security UI hidden. Allowing thisoperation facilitates picture-in-picture attacks, whereartificial chrome (usually indicating a positive securitystate) is supplied by the web content in place of thehidden UI.Useragents MUST prevent web content from overlayingchrome. This helps to ensure that userinteractions that are perceived to target agent chromeare not redirected to Web applications."robustness-software-install" name="robustness-software-install" class="anchor">7.4.2Software InstallationThis section covers web user agent APIs that allow webcontent to download software for later execution outsideof the web user agent context.href="#def-user-agent">Web user agents MUST NOTexpose programming interfaces which permit installationof software without a user intervention.Useragents MUST inform the user and request consent when theuser agent is attempting to install software outside ofthe agent environment as a result of web content.The interaction used MUST follow therequirements in 6.4.2Warning/Caution Messages ."C">User agents SHOULD NOT provide features which can beused by web content to install software outside of theagent environment without the user's consent."robustness-bookmarks" name="robustness-bookmarks" class="anchor">7.4.3 Bookmarking APIsUser agents often include features that enable Webcontent to update the user's bookmarks, e.g. through anECMAScript API. If permitted unchecked, these featurescan serve to confuse users by, e.g., placing a bookmarkthat goes by the same name as the user's bank, but pointsto an attacker's site."CIII">Web useragents MUST NOT permit Web content to add bookmarkswithout explicit user consent.href="#def-user-agent">Web user agents MUST NOTpermit Web content to add URIs to the user's bookmarkcollection that do not match the URI of the page that theuser currently interacts with."anchor">7.4.4 Pop-up Window APIsWith visual userinterfaces that use a windowed interaction paradigm, Useragents SHOULD restrict the opening of pop-up windows fromweb content, particularly those not initiated by useraction. Creating excessive numbers of new pop-upwindows is a technique that can be used to conditionusers to rapidly dismissing dialogs. This can be employedin interaction floodingattacks.User agentswhich offer this restriction SHOULD offer a way to extendpermission to individual trusted sites. Failing todo so encourages users who desire the functionality oncertain sites to disable the feature universally."security-considerations" name="security-considerations"class="anchor">8 Security Considerations"mitm-initial" class="anchor">8.1 Active attacks duringinitial TLS interactionsSection 5.4.1 TLSerrors leads to additional exposure during thefirst TLS interaction with a site, even if thatsite uses validated or extended validation certificates: Anactive attacker can show a self-signed certificate, whichwill cause only weak warning signals to the user.Traditional user agents react to this scenario with adialog box that interrupts the user's flow of interaction,but gives users the ability to override the securitywarning. Empirical evidence shows that this ability istypically exercised by users.Countermeasures against this threat include the priordesignation of high-value sites, for which extendedvalidation or validated certificates are required (causinga stronger warning signal during the attack scenariodescribed above), and communication of certification andTLS expectations by a mechanism separate from HTTP, e.g.through authenticated DNS records.5.4.1 TLS errorsrefers to the pinning of a new certificate to adestination. Note that this newly pinned certificate couldbe the basis for a spoofing attack, or it could represent arefresh of an Self Signed Certificate."cert-status-check-failures" name="cert-status-check-failures" class="anchor">8.2 CertificateStatus Checking FailuresThe TLS Errors (5.4.1 TLSerrors) section does not document intended behaviorfor user agents when a certificate status check fails fornetwork or other non-revocation reasons. At time ofwriting, the deployment environment for OCSP"#ref-ocsp">[RFC2560] status checking is fragile andsubject to frequent failures, so it is inappropriate torequire that user agents treat such failures as warnings orerrors. However, this creates a possibility for attack:site operators using a fraudulently obtained, and revoked,certificate may attempt to attack a CA's revocationinfrastructure as a way to suppress revocation errors. Useragent countermeasures for this vulnerability include:exposing failures of certificate validation checks to usersas warning (6.4.2Warning/Caution Messages ) or danger ("#error-danger">6.4.3 Danger Messages) levelmessages; or refusal to load sites that fail thesechecks."certs-assure-identity" name="certs-assure-identity" class="anchor">8.3 Certificates assure identity, notsecurityWhile TLS certificates of all types (i.e. self-signed,validated, or augmented assurance) provide the means forstrong encryption of communications, they should not beunderstood to be, or treated as, blanket securityassurances. In particular, validated and augmentedassurance certificates make guarantees about some level ofowner identity verification having been performed (seedefinitions) but they do not represent any guarantees thata site is operated in a safe manner, or is not otherwisesubject to attack. Historically, issues of security andidentity have been conflated by user agent interfaces whichpresent SSL/TLS connections as "secure," but implementersof this specification are advised to be cautious andcognizant of this distinction."security-considerations-petnames" name="security-considerations-petnames" class="anchor">8.4Binding "human readable" names to domain namesSeveral recommendations in this document concernthemselves with the binding between domain names andcertificates, but equally important for users is thebinding between domain name/certificate and the actualreal-world entity involved in the transaction. It ishelpful, for example, to know not only that example.compresents a valid certificate, but also that it is the"Example Inc., Norway" with whom the user expects to beinteracting. In the case of augmented assurancecertificates, the identity information provided may beconsidered sufficient for this purpose, but other validatedcertificates do not necessarily provide this real-worldidentity. User agents that wish to provide a mechanism forusers to manually establish these linkages are advised toconsider the petnames approach (see"#ref-petnames">[PETNAMES])."security-considerations-warning-fatigue" name="security-considerations-warning-fatigue" class="anchor">8.5 Warning FatigueRequirements in this document often involve warning(6.4.2 Warning/CautionMessages and 6.4.3Danger Messages) messages when warranted byconditions in the user agent. However, it is important tobe aware, when developing user interfaces, that users willhabituate to over-frequent warnings, weakening the impactof the messages and their ability to effectively interruptthe user's task flow.User agents are advised to constrain the number ofwarnings and errors presented to the minimum required tosatisfy these and other security guidelines. It is alsorecommended that user agents phrase options in thesemessages in terms of the action taken (e.g. "Ignore thiswarning," "Trust this site") rather than using genericlabels (e.g. "OK", "Cancel")."security-considerations-ev-dv" name="security-considerations-ev-dv" class="anchor">8.6 MixingAugmented Assurance and Validated CertificatesThe Augmented Assurance indicator tells the user thatthe owner and author of the Web page being displayed can beidentified using information from the associated augmentedassurance certificate. Identity signals in thisspecification only directly address displaying the identityof the party responsible for the top level resource in aWeb page. User agents may choose to make the identities ofother resources that can affect or control the page'scontent available, but we do not put forward a model forusers on how they might use such information in their trustdecisions.The identity of the top level resource vouches for thecontent of all dependent resources. What resources theseare is under the control of the top-level resource, whichwill typically identify these resources using URIs withdomain based authority. Therefore, this specificationrequires that, in order to display any augmented assurancerelated indicators, dependent resources must all bestrongly TLS protected using validatedcertificates.If an augmented assurance page includes content fromother strongly TLS-protected resources that are notidentified by augmented assurance certificates, the authorsfor these third party parts of the document cannot beidentified to the same extent as for the main document.Given that certain types of content, for example externalscripts and styling can change the containing document'sentire appearance, and framed content and plug-ins can bewhere the user's main interaction occurs, the user's realinteraction may be with content under the control of acompletely different party than the one identified by themain document's augmented assurance certificate.Using third party content also makes the main documentreliant upon the security of the third party contributor,and expands the available attack surface of the service,thus giving attackers several more lines of attack.Under the agent's Same Origin policy, separatelydisplayed Web pages from the same origin can freely readand modify each other's state. A Web page's origin iscomprised of the scheme, host and port of the URI used toretrieve the Web page. The origin does not take intoaccount any attributes of the TLS session or servercertificate used when retrieving a Web page. For example,consider a user agent that has loaded two Web pages from"https://www.example.com/". When the first page wasretrieved, an Augmented Assurance Certificate was used bythe TLS session. When the second page was retrieved, adifferent certificate, such as a domain validated orself-signed certificate, was used. Though the first pagewas retrieved using an augmented assurance certificate, thesecond page can freely read and write the first page.Differing security presentations of the two pages mayobscure this relationship in the mind of the user."dynamic-content" class="anchor">8.7 Dynamic content mightchange security propertiesThis specification is expressed in terms of thefundamentally static indicators of existing agent securityuser interfaces.These indicators tend to assume that the securityproperties "of a page" will not change in a significant wayonce it has finished loading (whatever that might mean indetail). Strictly speaking, this assumption is flawed:Dynamic pages can load scripts and data at any time andfrom any source (using techniques like the insertion ofscript tags into the DOM at run time); the effect may verywell be that a page that was retrieved from a secure Website with an Augmented Assurance certificate could at somepoint be under the control of scripts that are retrievedinsecurely. This specification does not prescribe anyspecific user interaction in this kind of situation.For TLS-protected HTTP requests caused using theXMLHttpRequest API [XHR]"#ref-XHRl2">[XHR2], this specification permits eitherhandling the error situation described above as a networkerror (and leaving behavior to the Web application inquestion) or causing a user interaction. It is expectedthat upcoming specifications for the XMLHttpRequest APIwill opt for the former choice.9Terms defined in this documentadvancedlevel"#def-augmented-assurance-cert">Augmented AssuranceCertificatebasiclevelchromeHTTPtransactionIdentityInformationidentitysignalInteraction floodingattackinteractivelyacceptedLocationBarmixedcontentpinningplug-insPrimary UserInterfaceSecondary UserInterfaceStrong TLSalgorithmsstronglyTLS-protectedTLSindicator"#def-tls-protected">TLS-protected"#def-secure-page">TLS-securedvalidatedcertificateweaklyTLS-protectedWeb PageWeb UserAgent10References"ref-ECRYPT-report">ECRYPT2009"http://www.ecrypt.eu.org/documents/D.SPA.7.pdf">ECRYPT2Yearly Report on Algorithms and Key Lengths (2009Edition), available athttp://www.ecrypt.eu.org/documents/D.SPA.7.pdf ."ref-EV">EVTLSCERT"http://www.cabforum.org/EV_Certificate_Guidelines.pdf">Guidelines for the Issuance and Management of ExtendedValidation Certificates, CA/Browser Forum, 7June 2007, available athttp://www.cabforum.org/EV_Certificate_Guidelines.pdf."ref-FAVICON">FAVICON"http://www.w3.org/2005/10/howto-favicon">How to Adda Favicon to your Site, D. HazaÃ«l-Massieux, C.Lilley, O. ThÃ©reaux, W3C work in progress, available athttp://www.w3.org/2005/10/howto-favicon ."ref-gutmann-kcm">KCM"http://tools.ietf.org/id/draft-gutmann-keycont-01.txt">Key Management through Key Continuity (KCM),(Expired) Internet Draft, September 2008, Peter Gutmann.This draft is available athttp://tools.ietf.org/id/draft-gutmann-keycont-01.txt."ref-NESSIE-report">NESSIE"https://www.cosic.esat.kuleuven.be/nessie/deliverables/decision-final.pdf">Portfolio of recommended cryptographic primitives,New European Schemes for Signatures, Integrity, andEncryption (NESSIE), available athttps://www.cosic.esat.kuleuven.be/nessie/deliverables/decision-final.pdf."ref-petnames">PETNAMES"http://www.hpl.hp.com/techreports/2005/HPL-2005-148.html">Petname Systems, HPL-2005-148, Mark Stiegler,August 2005. This report is available athttp://www.hpl.hp.com/techreports/2005/HPL-2005-148.html."ref-PKIX">PKIX"http://www.ietf.org/rfc/rfc5280.txt">Internet X.509Public Key Infrastructure Certificate and CertificateRevocation List (CRL) Profile, RFC 5280, D.Cooper, S. Santesson, S. Farrell, S. Boeyen, R. Housley, W.Polk, May 2008, available athttp://www.ietf.org/rfc/rfc5280.txt ."ref-RFC2119">RFC2119Keywords for use in RFCs to Indicate RequirementLevels, RFC 2119, S. Bradner, March 1997,available at http://www.ietf.org/rfc/rfc2119.txt ."ref-ocsp">RFC2560"http://www.ietf.org/rfc/rfc2560.txt">X.509 InternetPublic Key Infrastructure Online Certificate StatusProtocol - OCSP, RFC 2560, M. Myers, R. Ankney,A. Malpani, S. Galperin, C. Adams, June 1999. Thisspecification is available athttp://www.ietf.org/rfc/rfc2560.txt ."ref-RFC2616">RFC2616"http://www.ietf.org/rfc/rfc2616.txt">HypertextTransfer Protocol -- HTTP/1.1, RFC 2616, R.Fielding, J. Gettys, J. Mogul, H. Frystyk, L. Masinter, P.Leach, T. Berners-Lee, June 1999, available athttp://www.ietf.org/rfc/rfc2616.txt ."ref-RFC2817">RFC2817"http://www.ietf.org/rfc/rfc2817.txt">Upgrading toTLS Within HTTP/1.1, RFC 2817, R. Khare, S.Lawrence, May 2000, available athttp://www.ietf.org/rfc/rfc2817.txt ."ref-RFC2818">RFC2818"http://www.ietf.org/rfc/rfc2818.txt">HTTP OverTLS, RFC 2818, E. Rescorla, May 2000, availableat http://www.ietf.org/rfc/rfc2818.txt ."ref-COOKIES">RFC2965"http://www.ietf.org/rfc/rfc2965.txt">HTTP StateManagement Mechanism, RFC 2965, D. Kristol, L.Montulli, October 2000, available athttp://www.ietf.org/rfc/rfc2965.txt ."ref-RFC3709">RFC3709"http://www.ietf.org/rfc/rfc3709.txt">Internet X.509Public Key Infrastructure: Logotypes in X.509Certificates, RFC 3709, S. Santeson, R. Housley,T. Freeman, February 2004, available athttp://www.ietf.org/rfc/rfc3709.txt ."ref-URI">RFC3986"http://www.ietf.org/rfc/rfc3986.txt">UniformResource Identifier (URI): Generic Syntax", RFC3986, T. Berners-Lee, R. Fielding, L. Masinter, January2005, available at http://www.ietf.org/rfc/rfc3986.txt."ref-sslv3">SSLv3"http://web.archive.org/web/20080208141212/http://wp.netscape.com/eng/ssl3/">SSLv3 specification, Netscape, November1996. This specification is archived athttp://web.archive.org/web/20080208141212/http://wp.netscape.com/eng/ssl3/."ref-tlsv11">TLSv11TheTransport Layer Security (TLS) Protocol, RFC4346, T. Dierks, E. Rescorla, April 2006. Thisspecification is available athttp://www.ietf.org/rfc/rfc4346.txt ."ref-tlsv12">TLSv12TheTransport Layer Security (TLS) Protocol Version1.2, RFC 5246, T. Dierks, E. Rescorla, August2008. This specification is available athttp://www.ietf.org/rfc/rfc5246.txt ."ref-WCAG2">WCAG20"http://www.w3.org/TR/2008/REC-WCAG20-20081211/">WebContent Accessibility Guidelines 2.0, B.Caldwell, M. Cooper, L. G. Reid, G. Vanderheiden (eds.),W3C Recommendation 11 December 2008. This version ishttp://www.w3.org/TR/2008/REC-WCAG20-20081211/ . Thelatest version ofWCAG 2.0 is available at http://www.w3.org/TR/WCAG20/."ref-wsc-threats">WSC-THREATS"http://www.w3.org/TR/2007/NOTE-wsc-threats-20071101/">Web User Interaction: Threat Trees, T. Roessler(ed), W3C Working Group Note (work in progress) 1 November2007. This version ishttp://www.w3.org/TR/2007/NOTE-wsc-threats-20071101". Thelatestversion is available athttp://www.w3.org/TR/wsc-threats/ ."ref-wsc-usecases">WSC-USECASES"http://www.w3.org/TR/2008/NOTE-wsc-usecases-20080306/">Web Security Experience, Indicators and Trust: Scope andUse Cases, T. Close, Editor, W3C Working GroupNote (work in progress) 06 March 2008. This version ishttp://www.w3.org/TR/2008/NOTE-wsc-usecases-20080306/ . Thelatestversion is available athttp://www.w3.org/TR/wsc-usecases/ ."ref-XHR">XHR"http://www.w3.org/TR/XMLHttpRequest/">XMLHttpRequest.A. van Kesteren (ed.), W3C Working Draft (Work in Progress)19 November 2009. This version of the XMLHttpRequestspecification is athttp://www.w3.org/TR/2009/WD-XMLHttpRequest-20091119/ . Thelatestversion of this specification is available athttp://www.w3.org/TR/XMLHttpRequest/ ."ref-XHRl2">XHR2"http://www.w3.org/TR/XMLHttpRequest2/">XMLHttpRequestLevel 2. A. van Kesteren (ed.), W3C WorkingDraft (Work in Progress) 20 August September 2009. Thisversion of the XMLHttpRequest Level 2 specification is athttp://www.w3.org/TR/2009/WD-XMLHttpRequest2-20090820/ .The"http://tools.ietf.org/id/draft-gutmann-keycont-01.txt">latestversion of this specification is available athttp://www.w3.org/TR/XMLHttpRequest2/ .