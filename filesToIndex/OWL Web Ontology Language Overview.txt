"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">OWL Web Ontology Language Overview/**/.PrePublicationWarning {BORDER-RIGHT: black double; PADDING-RIGHT: 1em; BORDER-TOP: black double; PADDING-LEFT: 1em; FONT-WEIGHT: bold; BACKGROUND: yellow; PADDING-BOTTOM: 1em; MARGIN: 1em 0em; BORDER-LEFT: black double; PADDING-TOP: 1em; BORDER-BOTTOM: black double}/*]]>*/href="http://www.w3.org/StyleSheets/TR/W3C-REC" />name="RCSId" />src="http://www.w3.org/Icons/w3c_home" width="72" />OWL Web Ontology LanguageOverviewW3CRecommendation 10 February 2004New VersionAvailable: OWL 2(Document Status Update, 12 November 2009)The OWL Working Group has produceda W3C Recommendation for a new version of OWL which addsfeatures to this 2004 version, while remaining compatible.Please see OWL 2Document Overview for an introduction to OWL 2 and a guideto the OWL 2 document set.This version:http://www.w3.org/TR/2004/REC-owl-features-20040210/Latest version:http://www.w3.org/TR/owl-features/Previous version:http://www.w3.org/TR/2003/PR-owl-features-20031215/Editors:Deborah L. McGuinness (Knowledge Systems Laboratory,Stanford University)src="http://www.w3.org/2001/sw/WebOnt/guide-src/Email.Deborah.McGuinness.gif"align="middle" />Frank van Harmelen (Vrije Universiteit, Amsterdam)Frank.van.Harmelen@cs.vu.nlPlease refer to thehref="http://www.w3.org/2001/sw/WebOnt/errata#owl-features">erratafor this document, which may include some normative corrections.See also translations.Copyright © 2004Consortium">W3C®(MIT,Consortium for Informatics and Mathematics">ERCIM,Keio), AllRights Reserved. W3Cliability,trademark,document use andsoftware licensing rules apply.AbstractThe OWL Web Ontology Language is designed for use byapplications that need to process the content of informationinstead of just presenting information to humans. OWLfacilitates greater machine interpretability of Web contentthan that supported by XML, RDF, and RDF Schema (RDF-S) byproviding additional vocabulary along with a formalsemantics. OWL has three increasingly-expressivesublanguages: OWL Lite, OWL DL, and OWL Full.This document is written for readers who want a firstimpression of the capabilities of OWL. It provides anintroduction to OWL by informally describing the features ofeach of the sublanguages of OWL. Some knowledge ofRDF Schema is useful for understanding this document, butnot essential. After this document, interested readers mayturn to the OWLGuide for more detailed descriptions and extensiveexamples on the features of OWL. The normative formaldefinition of OWL can be found in theOWL Semanticsand Abstract Syntax.Status of this documentThis document has been reviewed by W3C Members and other interestedparties, and it has been endorsed by the Director as ahref="http://www.w3.org/2003/06/Process-20030618/tr.html#RecsW3C">W3CRecommendation. W3C's role in making the Recommendation is todraw attention to the specification and to promote its widespreaddeployment. This enhances the functionality and interoperability ofthe Web.This is one ofhref="http://www.w3.org/TR/2004/REC-owl-features-20040210/#s1.1">sixparts of the W3C Recommendation for OWL, the Web OntologyLanguage. It has been developed by thehref="http://www.w3.org/2001/sw/WebOnt/">Web Ontology WorkingGroup as part of the W3CSemantic Web Activity (href="http://www.w3.org/2001/sw/Activity">Activity Statement,href="http://www.w3.org/2001/sw/WebOnt/charter">Group Charter) forpublication on 10 February 2004.The design of OWL expressed in earlier versions of these documentshas been widely reviewed and satisfies the Working Group'shref="http://www.w3.org/TR/webont-req/"> technical requirements.The Working Group has addressedhref="http://lists.w3.org/Archives/Public/public-webont-comments/">all comments received, making changes as necessary. Changes tothis document sincehref="http://www.w3.org/TR/2003/PR-owl-features-20031215/">the ProposedRecommendation version are detailed in thehref="./#changes-since-PR">change log.Comments are welcome athref="mailto:public-webont-comments@w3.org">public-webont-comments@w3.org(href="http://lists.w3.org/Archives/Public/public-webont-comments/">archive)and general discussion of related technology is welcome athref="mailto:www-rdf-logic@w3.org">www-rdf-logic@w3.org (href="http://lists.w3.org/Archives/Public/www-rdf-logic/"shape="rect">archive).A list ofimplementations is available.The W3C maintains a list ofhref="http://www.w3.org/2001/sw/WebOnt/discl" rel="disclosure">anypatent disclosures related to this work.This section describes the status of this document at the time of its publication. Other documents may supersede this document. A list of current W3C publications and the latest revision of this technical report can be found in the W3C technical reports index at http://www.w3.org/TR/.Table of contentsIntroductionDocument RoadmapWhy OWL?The three sublanguages of OWLThe structure of this documentLanguage SynopsisOWL Lite SynopsisOWL DL and OWL Full SynopsisLanguage Description of OWL LiteOWL Lite RDF Schema FeaturesOWL Lite Equality and InequalityOWL Lite Property CharacteristicsOWL Lite Property RestrictionsOWL Lite Restricted CardinalityOWL Lite Class IntersectionOWL DatatypesOWL Lite Header InformationOWL Lite Annotation PropertiesOWL Lite VersioningIncremental Language Description of OWL DL and OWL FullSummaryReferencesAcknowledgementsChange Log1. IntroductionThis document describes the OWL Web Ontology Language. OWL isintended to be used when the information contained indocuments needs to be processed by applications, as opposedto situations where the content only needs to be presented tohumans. OWL can be used to explicitly represent the meaningof terms in vocabularies and the relationships between thoseterms. This representation of terms and theirinterrelationships is called an ontology. OWL has morefacilities for expressing meaning and semantics than XML,RDF, and RDF-S, and thus OWL goes beyond these languages inits ability to represent machine interpretable content on theWeb. OWL is a revision of theDAML+OIL web ontology language incorporating lessonslearned from the design and application of DAML+OIL.1.1 Document RoadmapThe OWL Language is described by a set of documents, eachfulfilling a different purpose, and catering to a differentaudience. The following provides a brief roadmap fornavigating through this set of documents:This OWLOverview gives a simple introduction to OWL byproviding a language feature listing with very brieffeature descriptions;The OWL Guidedemonstrates the use of the OWL language by providing anextended example. It also provides aglossaryof the terminology used in these documents;The OWLReference gives a systematic and compact (but stillinformally stated) description of all the modellingprimitives of OWL;The OWLSemantics and Abstract Syntax document is the final andformally stated normative definition of the language;The OWL WebOntology Language Test Cases document contains a largeset of test cases for the language;The OWL UseCases and Requirements document contains a set of usecases for a web ontology language and compiles a set ofrequirements for OWL.The suggested reading order of the first four documents isas given since they have been listed in increasing degree oftechnical content. The last two documents complete thedocumentation set.1.2 Why OWL?The Semantic Web is a vision for the future of the Web inwhich information is given explicit meaning, making it easierfor machines to automatically process and integrateinformation available on the Web. The Semantic Web will buildon XML's ability to define customized tagging schemes andRDF's flexible approach to representing data. The first levelabove RDF required for the Semantic Web is an ontologylanguage what can formally describe the meaning ofterminology used in Web documents. If machines are expectedto perform useful reasoning tasks on these documents, thelanguage must go beyond the basic semantics of RDF Schema.The OWL Use Casesand Requirements Document provides moredetailson ontologies, motivates the need for a Web OntologyLanguage in terms ofsixuse cases, and formulatesdesigngoals,requirements andobjectives for OWL.OWL has been designed to meet this need for a Web OntologyLanguage. OWL is part of the growing stack of W3Crecommendations related to the Semantic Web.XML provides asurface syntax for structured documents, but imposes nosemantic constraints on the meaning of these documents.XML Schema isa language for restricting the structure of XML documentsand also extends XML with datatypes.RDF is a datamodel for objects ("resources") andrelations between them, provides a simple semantics forthis datamodel, and these datamodels can be representedin an XML syntax.RDF Schema is a vocabulary for describing propertiesand classes of RDF resources, with a semantics forgeneralization-hierarchies of such properties andclasses.OWL adds more vocabulary for describing properties andclasses: among others, relations between classes (e.g.disjointness), cardinality (e.g. "exactly one"),equality, richer typing of properties, characteristics ofproperties (e.g. symmetry), and enumerated classes.1.3 The three sublanguages ofOWLOWL provides three increasingly expressive sublanguagesdesigned for use by specific communities of implementers andusers.OWLLite supports those users primarily needing aclassification hierarchy and simple constraints. Forexample, while it supports cardinality constraints, itonly permits cardinality values of 0 or 1. It should besimpler to provide tool support for OWL Lite than itsmore expressive relatives, and OWL Lite provides a quickmigration path for thesauri and other taxonomies. OwlLite also has a lower formal complexity than OWL DL, seethesection on OWL Lite in the OWL Reference for furtherdetails.OWL DLsupports those users who want the maximum expressivenesswhile retaining computational completeness (allconclusions are guaranteed to be computable) anddecidability (all computations will finish in finitetime). OWL DL includes all OWL language constructs, butthey can be used only under certain restrictions (forexample, while a class may be a subclass of many classes,a class cannot be an instance of another class).with restrictions such as type separation (a class can not also be an individual orproperty, a property can not also be an individual or class).-->OWL DL is sonamed due to its correspondence withdescription logics, a field of research thathas studied the logics that form the formal foundation ofOWL.OWLFull is meant for users who want maximumexpressiveness and the syntactic freedom of RDF with nocomputational guarantees. For example, in OWL Full aclass can be treated simultaneously as a collection ofindividuals and as an individual in its own right. OWLFull allows an ontology to augment the meaning of thepre-defined (RDF or OWL) vocabulary. It is unlikely thatany reasoning software will be able to support completereasoning for every feature of OWL Full.Each of these sublanguages is an extension of its simplerpredecessor, both in what can be legally expressed and inwhat can be validly concluded. The following set of relationshold. Their inverses do not.Every legal OWL Lite ontology is a legal OWL DL ontology.Every legal OWL DL ontology is a legal OWL Full ontology.Every valid OWL Lite conclusion is a valid OWL DLconclusion.Every valid OWL DL conclusion is a valid OWL Fullconclusion.Ontology developers adopting OWL should consider whichsublanguage best suits their needs. The choice between OWLLite and OWL DL depends on the extent to which users requirethe more-expressive constructs provided by OWL DL. The choicebetween OWL DL and OWL Full mainly depends on the extent towhich users require the meta-modeling facilities of RDFSchema (e.g. defining classes of classes, or attachingproperties to classes). When using OWL Full as compared toOWL DL, reasoning support is less predictable since completeOWL Full implementations do not currently exist.OWL Full can be viewed as an extension of RDF, while OWLLite and OWL DL can be viewed as extensions of a restrictedview of RDF. Every OWL (Lite, DL, Full) document is an RDFdocument, and every RDF document is an OWL Full document, butonly some RDF documents will be a legal OWL Lite or OWL DLdocument. Because of this, some care has to be taken when auser wants to migrate an RDF document to OWL. When theexpressiveness of OWL DL or OWL Lite is deemed appropriate,some precautions have to be taken to ensure that the originalRDF document complies with the additional constraints imposedby OWL DL and OWL Lite. Among others, every URI that is used asa class name must be explicitly asserted to be of typeowl:Class (and similarly for properties), every individual mustbe asserted to belong to at least one class (even if onlyowl:Thing), the URI's used for classes, properties andindividuals must be mutually disjoint. The details of these andother constraints on OWL DL and OWL Lite are explained inappendix Eof the OWL Reference.1.4 The structure of thisdocumentThis document first describes the features in OWL Lite,followed by a description of the features that are added inOWL DL and OWL Full (OWL DL and OWL Full contain the samefeatures, but OWL Full is more liberal about how thesefeatures can be combined).2. Language SynopsisThis section provides a quick index to all the languagefeatures for OWL Lite, OWL DL, and OWL Full.In this document, italicized terms are terms in OWL. Prefixesof rdf: or rdfs: are used when terms are already present inRDF or RDF Schema. Otherwise terms are introduced by OWL.Thus, the term rdfs:subPropertyOf indicates thatsubPropertyOf is already in the rdfs vocabulary (technically: the rdfs namespace). Also, the term Class is moreprecisely stated as owl:Class and is a term introducedby OWL.2.1 OWL Lite SynopsisThe list of OWL Lite language constructs is given below.RDF Schema Features:Class (Thing, Nothing)rdfs:subClassOfrdf:Propertyrdfs:subPropertyOfrdfs:domainrdfs:rangeIndividual(In)Equality:equivalentClassequivalentPropertysameAsdifferentFromAllDifferentdistinctMembersProperty Characteristics:ObjectPropertyDatatypePropertyinverseOfTransitivePropertySymmetricPropertyFunctionalPropertyInverseFunctionalPropertyProperty Restrictions:RestrictiononPropertyallValuesFromsomeValuesFromRestricted Cardinality:minCardinality (only 0 or 1)maxCardinality (only 0 or 1)cardinality (only 0 or 1)Header Information:OntologyimportsClass Intersection:intersectionOfVersioning:versionInfopriorVersionbackwardCompatibleWithincompatibleWithDeprecatedClassDeprecatedPropertyAnnotation Properties:rdfs:labelrdfs:commentrdfs:seeAlsordfs:isDefinedByAnnotationPropertyOntologyPropertyDatatypesxsd datatypes2.2 OWL DL and Full SynopsisThe list of OWL DL and OWL Full language constructs that arein addition to or expand those of OWL Lite is given below.Class Axioms:oneOf, dataRangedisjointWithequivalentClass(applied to class expressions)rdfs:subClassOf(applied to class expressions)Boolean Combinations of Class Expressions:unionOfcomplementOfintersectionOfArbitrary Cardinality:minCardinalitymaxCardinalitycardinalityFiller Information:hasValue3. Language Description of OWL LiteThis section provides an informal description of the OWL Litelanguage features. We do not discuss the specific syntax ofthese features (see theOWL Reference fordefinitions). Each language feature is hyperlinked to theappropriate place in theOWL Guide formore examples and guidance on usage.OWL Lite uses only some of the OWL language features and hasmore limitations on the use of the features than OWL DL orOWL Full. For example, in OWL Lite classes can only bedefined in terms of named superclasses (superclasses cannotbe arbitrary expressions), and only certain kinds of classrestrictions can be used. Equivalence between classes andsubclass relationships between classes are also only allowedbetween named classes, and not between arbitrary classexpressions. Similarly, restrictions in OWL Lite use onlynamed classes. OWL Lite also has a limited notion ofcardinality - the only cardinalities allowed to be explicitlystated are 0 or 1.3.1 OWL Lite RDF Schema FeaturesThis document uses the term "individual" to referto objects that belong to classes (e.g., the individual Deborah belongs to theclass Person) as well as to objects that are datatypes (e.g., the individual 4 is an integer).-->The following OWL Lite features related to RDF Schema areincluded.name="Class">Class: A class defines a group of individualsthat belong together because they share some properties.For example, Deborah and Frank are both members of theclass Person. Classes can be organized in a specializationhierarchy usingsubClassOf. There is a built-in most generalclass namedThing that is the class of all individuals and is asuperclass of all OWL classes. There is also a built-inmost specific class namedNothing that is the class that has no instances and asubclass of all OWL classes.name="subClassOf">rdfs:subClassOf: Class hierarchies may becreated by making one or more statements that a class is asubclass of another class. For example, the class Personcould be stated to be a subclass of the class Mammal. Fromthis a reasoner can deduce that if an individual is aPerson, then it is also a Mammal.name="property">rdf:Property: Properties can be used to staterelationships between individuals or from individuals todata values. Examples of properties include hasChild,hasRelative, hasSibling, and hasAge. The first three can beused to relate an instance of a class Person to anotherinstance of the class Person (and are thus occurences ofObjectProperty), and the last (hasAge) can be used torelate an instance of the class Person to an instance ofthe datatype Integer (and is thus an occurence ofDatatypeProperty). Both owl:ObjectProperty andowl:DatatypeProperty aresubclassesof the RDF class rdf:Property.name="subPropertyOf">rdfs:subPropertyOf: Property hierarchies may becreated by making one or more statements that a property isa subproperty of one or more other properties. For example,hasSibling may be stated to be a subproperty ofhasRelative. From this a reasoner can deduce that if anindividual is related to another by the hasSiblingproperty, then it is also related to the other by thehasRelative property.name="domain">rdfs:domain: A domain of a property limits theindividuals to which the property can be applied. If aproperty relates an individual to another individual, andthe property has a class as one of its domains, then theindividual must belong to the class. For example, theproperty hasChild may be stated to have the domain ofMammal. From this a reasoner can deduce that if FrankhasChild Anna, then Frank must be a Mammal. Note thatrdfs:domain is called a global restriction since therestriction is stated on the property and not just on theproperty when it is associated with a particular class. Seethe discussion below on property restrictions for moreinformation.name="range">rdfs:range: The range of a property limits theindividuals that the property may have as its value. If aproperty relates an individual to another individual, andthe property has a class as its range, then the otherindividual must belong to the range class. For example, theproperty hasChild may be stated to have the range ofMammal. From this a reasoner can deduce that if Louise isrelated to Deborah by the hasChild property, (i.e., Deborahis the child of Louise), then Deborah is a Mammal. Range isalso a global restriction as is domain above. Again, seethe discussion below on local restrictions (e.g.AllValuesFrom) for more information.Individualname="Individual"> : Individuals are instancesof classes, and properties may be used to relate oneindividual to another. For example, an individual namedDeborah may be described as an instance of the class Personand the property hasEmployer may be used to relate theindividual Deborah to the individual StanfordUniversity.3.2 OWL Lite Equality andInequalityThe following OWL Lite features are related to equality orinequality.equivalentClassname="equivalentClass"> : Two classes may bestated to be equivalent. Equivalent classes have the sameinstances. Equality can be used to create synonymousclasses. For example, Car can be stated to beequivalentClass to Automobile. From this a reasonercan deduce that any individual that is an instance of Caris also an instance of Automobile and vice versa.name="equivalentProperty">equivalentProperty: Two properties may bestated to be equivalent. Equivalent properties relate oneindividual to the same set of other individuals. Equalitymay be used to create synonymous properties. For example,hasLeader may be stated to be the equivalentPropertyto hasHead. From this a reasoner can deduce that if X isrelated to Y by the property hasLeader, X is also relatedto Y by the property hasHead and vice versa. A reasoner canalso deduce that hasLeader is a subproperty of hasHead andhasHead is a subProperty of hasLeader.name="sameAs">sameAs: Two individuals may be stated to be thesame. These constructs may be used to create a number ofdifferent names that refer to the same individual. Forexample, the individual Deborah may be stated to be thesame individual as DeborahMcGuinness.name="differentFrom">differentFrom: An individual may be stated tobe different from other individuals. For example, theindividual Frank may be stated to be different from theindividuals Deborah and Jim. Thus, if the individuals Frankand Deborah are both values for a property that is statedto be functional (thus the property has at most one value),then there is a contradiction. Explicitly stating thatindividuals are different can be important in when usinglanguages such as OWL (and RDF) that do not assume thatindividuals have one and only one name. For example, withno additional information, a reasoner will not deduce thatFrank and Deborah refer to distinct individuals.name="AllDifferent">AllDifferent: A number of individuals may bestated to be mutually distinct in one AllDifferentstatement. For example, Frank, Deborah, and Jim could bestated to be mutually distinct using the AllDifferentconstruct. Unlike the differentFrom statement above, thiswould also enforce that Jim and Deborah are distinct (notjust that Frank is distinct from Deborah and Frank isdistinct from Jim). The AllDifferent construct isparticularly useful when there are sets of distinct objectsand when modelers are interested in enforcing the uniquenames assumption within those sets of objects. It is usedin conjunction withdistinctMembers to state that all members of a list aredistinct and pairwise disjoint.3.3 OWL Lite PropertyCharacteristicsThere are special identifiers in OWL Lite that are used toprovide information concerning properties and their values. Thedistinction between ObjectProperty and DatatypeProperty ismentionedabove in the property description.name="inverseOf">inverseOf: One property may be stated to be theinverse of another property. If the property P1 is statedto be the inverse of the property P2, then if X is relatedto Y by the P2 property, then Y is related to X by the P1property. For example, if hasChild is the inverse ofhasParent and Deborah hasParent Louise, then a reasoner candeduce that Louise hasChild Deborah.name="TransitiveProperty">TransitiveProperty: Properties may be stated tobe transitive. If a property is transitive, then if thepair (x,y) is an instance of the transitive property P, andthe pair (y,z) is an instance of P, then the pair (x,z) isalso an instance of P. For example, if ancestor is statedto be transitive, and if Sara is an ancestor of Louise(i.e., (Sara,Louise) is an instance of the propertyancestor) and Louise is an ancestor of Deborah (i.e.,(Louise,Deborah) is an instance of the property ancestor),then a reasoner can deduce that Sara is an ancestor ofDeborah (i.e., (Sara,Deborah) is an instance of theproperty ancestor).OWL Lite (and OWL DL) impose the side condition thattransitive properties (and their superproperties) cannothave a maxCardinality 1 restriction. Without thisside-condition, OWL Lite and OWL DL would becomeundecidable languages. See the property axiom section ofthe OWLSemantics and Abstract Syntax document for moreinformation.name="SymmetricProperty">SymmetricProperty: Properties may be stated tobe symmetric. If a property is symmetric, then if the pair(x,y) is an instance of the symmetric property P, then thepair (y,x) is also an instance of P. For example, friendmay be stated to be a symmetric property. Then a reasonerthat is given that Frank is a friend of Deborah can deducethat Deborah is a friend of Frank.name="FunctionalProperty">FunctionalProperty : Properties may be statedto have a unique value. If a property is aFunctionalProperty, then it has no more than one value foreach individual (it may have no values for an individual).This characteristic has been referred to as having a uniqueproperty. FunctionalProperty is shorthand for stating thatthe property's minimum cardinality is zero and its maximumcardinality is 1. For example, hasPrimaryEmployer may bestated to be a FunctionalProperty. From this a reasoner maydeduce that no individual may have more than one primaryemployer. This does not imply that every Person must haveat least one primary employer however.name="InverseFunctionalProperty">InverseFunctionalProperty: Properties may bestated to be inverse functional. If a property is inversefunctional then the inverse of the property is functional.Thus the inverse of the property has at most one value foreach individual. This characteristic has also been referredto as an unambiguous property. For example,hasUSSocialSecurityNumber (a unique identifier for UnitedStates residents) may be stated to be inverse functional(or unambiguous). The inverse of this property (which maybe referred to as isTheSocialSecurityNumberFor) has at mostone value for any individual in the class of socialsecurity numbers. Thus any one person's social securitynumber is the only value for theirisTheSocialSecurityNumberFor property. From this a reasonercan deduce that no two different individual instances ofPerson have the identical US Social Security Number. Also,a reasoner can deduce that if two instances of Person havethe same social security number, then those two instancesrefer to the same individual.3.4 OWL Lite PropertyRestrictionsOWL Lite allows restrictions to be placed on howproperties can be used by instances of a class. These type (andthe cardinality restrictions in the next subsection) are usedwithin the context of anowl:Restriction.Theowl:onPropertyelement indicates the restricted property. The following tworestrictions limit which values can be used while the nextsection's restrictions limit how many values can be used.name="allValuesFrom">allValuesFrom: The restriction allValuesFrom isstated on a property with respect to a class. It means thatthis property on this particular class has a local rangerestriction associated with it. Thus if an instance of theclass is related by the property to a second individual,then the second individual can be inferred to be aninstance of the local range restriction class. For example,the class Person may have a property called hasDaughterrestricted to have allValuesFrom the class Woman. Thismeans that if an individual person Louise is related by theproperty hasDaughter to the individual Deborah, then fromthis a reasoner can deduce that Deborah is an instance ofthe class Woman. This restriction allows the propertyhasDaughter to be used with other classes, such as theclass Cat, and have an appropriate value restrictionassociated with the use of the property on that class. Inthis case, hasDaughter would have the local rangerestriction of Cat when associated with the class Cat andwould have the local range restriction Person whenassociated with the class Person. Note that a reasoner cannot deduce from an allValuesFrom restriction alone thatthere actually is at least one value for the property.name="someValuesFrom">someValuesFrom: The restrictionsomeValuesFrom is stated on a property with respectto a class. A particular class may have a restriction on aproperty that at least one value for that property is of acertain type. For example, the class SemanticWebPaper mayhave a someValuesFrom restriction on the hasKeywordproperty that states that some value for thehasKeyword property should be an instance of the classSemanticWebTopic. This allows for the option of havingmultiple keywords and as long as one or more is an instanceof the class SemanticWebTopic, then the paper would beconsistent with the someValuesFrom restriction.Unlike allValuesFrom, someValuesFrom does notrestrict all the values of the property to be instances ofthe same class. If myPaper is an instance of theSemanticWebPaper class, then myPaper is related by thehasKeyword property to at least one instance of theSemanticWebTopic class. Note that a reasoner can not deduce(as it could with allValuesFrom restrictions) thatall values of hasKeyword are instances of theSemanticWebTopic class3.5 OWL Lite RestrictedCardinalityOWL Lite includes a limited form of cardinality restrictions.OWL (and OWL Lite) cardinality restrictions are referred toas local restrictions, since they are stated on propertieswith respect to a particular class. That is, the restrictionsconstrain the cardinality of that property on instances ofthat class. OWL Lite cardinality restrictions are limitedbecause they only allow statements concerning cardinalitiesof value 0 or 1 (they do not allow arbitrary values forcardinality, as is the case in OWL DL and OWL Full).name="minCardinality">minCardinality: Cardinality is stated on aproperty with respect to a particular class. If aminCardinality of 1 is stated on a property withrespect to a class, then any instance of that class will berelated to at least one individual by that property. Thisrestriction is another way of saying that the property isrequired to have a value for all instances of theclass. For example, the class Person would not have anyminimum cardinality restrictions stated on a hasOffspringproperty since not all persons have offspring. The classParent, however would have a minimum cardinality of 1 onthe hasOffspring property. If a reasoner knows that Louiseis a Person, then nothing can be deduced about a minimumcardinality for her hasOffspring property. Once it isdiscovered that Louise is an instance of Parent, then areasoner can deduce that Louise is related to at least oneindividual by the hasOffspring property. From thisinformation alone, a reasoner can not deduce any maximumnumber of offspring for individual instances of the classparent. In OWL Lite the only minimum cardinalities allowedare 0 or 1. A minimum cardinality of zero on a propertyjust states (in the absence of any more specificinformation) that the property is optional with respect toa class. For example, the property hasOffspring may have aminimum cardinality of zero on the class Person (while itis stated to have the more specific information of minimumcardinality of one on the class Parent).name="maxCardinality">maxCardinality: Cardinality is stated on aproperty with respect to a particular class. If amaxCardinality of 1 is stated on a property withrespect to a class, then any instance of that class will berelated to at most one individual by that property. AmaxCardinality 1 restriction is sometimes called afunctional or unique property. For example, the propertyhasRegisteredVotingState on the class UnitedStatesCitizensmay have a maximum cardinality of one (because people areonly allowed to vote in only one state). From this areasoner can deduce that individual instances of the classUSCitizens may not be related to two or more distinctindividuals through the hasRegisteredVotingState property.From a maximum cardinality one restriction alone, areasoner can not deduce a minimum cardinality of 1. It maybe useful to state that certain classes have no values fora particular property. For example, instances of the classUnmarriedPerson should not be related to anyindividuals by the property hasSpouse. This situation isrepresented by a maximum cardinality of zero on thehasSpouse property on the class UnmarriedPerson.name="Cardinality">cardinality: Cardinality is provided as aconvenience when it is useful to state that a property on aclass has both minCardinality 0 andmaxCardinality 0 or both minCardinality 1 andmaxCardinality 1. For example, the class Person hasexactly one value for the property hasBirthMother. Fromthis a reasoner can deduce that no two distinct individualinstances of the class Mother may be values for thehasBirthMother property of the same person.Alternate namings for these restricted forms ofcardinality were discussed. Current recommendations are toinclude any such names in a front end system. More on thistopic is available on the publicly available webont mailarchives with the most relevant message athttp://lists.w3.org/Archives/Public/www-webont-wg/2002Oct/0063.html.3.6 OWL Lite Class IntersectionOWL Lite contains an intersection constructor but limitsits usage.on the use of boolean constructors such as intersection.-->name="intersectionOf">intersectionOf: OWL Lite allows intersectionsof named classes and restrictions. For example, the classEmployedPerson can be described as theintersectionOf Person and EmployedThings (whichcould be defined as things that have a minimum cardinalityof 1 on the hasEmployer property). From this a reasoner maydeduce that any particular EmployedPerson has at least oneemployer.The ability to use unnamed classes is introduced in OWL DL and OWL Full. -->3.7 OWL DatatypesOWL uses the RDF mechanisms for data values.datatyping scheme, which provides a mechanism for referring to pointer href="http://www.daml.org/2002/06/webont/owl-ref-proposed#ref-xml-schema2">XML Schema datatypes. Such XML Schema datatypes are identified by a URI, andeach time an instance of such a datatype occurs, it must have an RDF attributerdf:datatype whose value should be the URI reference of the XML Schema datatype.-->See the OWL Guidesectionon datatypes for a more detailed description of thebuilt-in OWL datatypes taken largely from the XML Schemadatatypes.3.8 OWL Lite Header InformationOWL Lite supports notions of ontology inclusion andrelationships and attaching information to ontologies.OWL supportsstandard notions of ontology referencing, inclusion, and meta-information. Allthree levels of OWL include ways of specifying ontologies to import, ontologyversion information, prior ontology version information, ontologies known to bebackward compatible, and ontologies known to be incompatible.-->See theOWL Reference fordetails and the OWLGuide for examples.3.9 OWL Lite AnnotationPropertiesOWL Lite allows annotations on classes, properties,individuals and ontology headers. The use of these annotationsis subject to certain restrictions. See thesection onAnnotations in the OWL Reference for details.3.10 OWL Lite VersioningRDF already has a small vocabulary for describingversioning information. OWL significantly extends thisvocabulary. See theOWLReference for further details.4. Incremental Language Descriptionof OWL DL and OWL FullBoth OWL DL and OWL Full use the same vocabulary althoughOWL DL is subject to some restrictions. Roughly, OWL DLrequires type separation (a class can not also be an individualor property, a property can not also be an individual orclass). This implies that restrictions cannot be applied to thelanguage elements of OWL itself (something that is allowed inOWL Full). Furthermore, OWL DL requires that properties areeither ObjectProperties or DatatypeProperties:DatatypeProperties are relations between instances of classesand RDF literals and XML Schema datatypes, whileObjectProperties are relations between instances of twoclasses. The OWLSemantics and Abstract Syntax document explains thedistinctions and limitations. We describe the OWL DL and OWLFull vocabulary that extends the constructions of OWL Litebelow.name="oneOf">oneOf: (enumerated classes): Classes can bedescribed by enumeration of the individuals that make upthe class. The members of the class are exactly the set ofenumerated individuals; no more, no less. For example, theclass of daysOfTheWeek can be described by simplyenumerating the individuals Sunday, Monday, Tuesday,Wednesday, Thursday, Friday, Saturday. From this a reasonercan deduce the maximum cardinality (7) of any property thathas daysOfTheWeek as its allValuesFrom restriction.name="hasValue">hasValue: (property values): A property can berequired to have a certain individual as a value (alsosometimes referred to as property values). For example,instances of the class of dutchCitizens can becharacterized as those people that have theNetherlands as avalue of their nationality. (The nationality value,theNetherlands, is an instance of the class ofNationalities).name="disjointWith">disjointWith: Classes may be stated to bedisjoint from each other. For example, Man and Woman can bestated to be disjoint classes. From this disjointWithstatement, a reasoner can deduce an inconsistency when anindividual is stated to be an instance of both andsimilarly a reasoner can deduce that if A is an instance ofMan, then A is not an instance of Woman.name="booleanFull">unionOf, complementOf, intersectionOf (Booleancombinations): OWL DL and OWL Full allow arbitrary Booleancombinations of classes and restrictions: unionOf,complementOf, and intersectionOf. For example, usingunionOf, we can state that a class contains things that areeither USCitizens or DutchCitizens. Using complementOf, wecould state that children are not SeniorCitizens.(i.e. the class Children is a subclass of the complement ofSeniorCitizens). Citizenship of the European Union could bedescribed as the union of the citizenship of all memberstates.minCardinality, maxCardinality,cardinalityname="cardinalityFull"> (full cardinality):While in OWL Lite, cardinalities are restricted to atleast, at most or exactly 1 or 0, full OWL allowscardinality statements for arbitrary non-negative integers.For example the class of DINKs ("Dual Income, No Kids")would restrict the cardinality of the property hasIncome toa minimum cardinality of two (while the property hasChildwould have to be restricted to cardinality 0).name="complexClassFull">complex classes : Inmany constructs, OWL Lite restricts the syntax to singleclass names (e.g. in subClassOf or equivalentClassstatements). OWL Full extends this restriction to allowarbitrarily complex class descriptions, consisting ofenumerated classes, property restrictions, and Booleancombinations. Also, OWL Full allows classes to be used asinstances (and OWL DL and OWL Lite do not). For more onthis topic, see the "Design for Use" section of the Guidedocument.5. SummaryThis document provides an overview of the Web OntologyLanguage by providing a brief introduction to why one mightneed a Web ontology language and how OWL fits in with relatedW3C languages. It also provides a brief description of thethree OWL sublanguages: OWL Lite, OWL DL, and OWL Full alongwith a feature synopsis for each of the languages. Thisdocument is an update to the Feature Synopsis Document. Itprovides simple descriptions of the constructs along withsimple examples. It references theOWL referencedocument, the OWLGuide, and theOWL Semantics andAbstract Syntax document for more details. Previousversions (December15, 2003,September 5, 2003,August18, 2003,July 30, 2003,May 1, 2003,March 20, 2003,January 2, 2003,July 29, 2002,July 8, 2002,June 23, 2002,May 26, 2002, andMay 15, 2002) of this document provide the historical viewof the evolution of OWL Lite and the issues discussed in itsevolution.References[OWL Guide]OWL Web Ontology Language Guide, Michael K.Smith, Chris Welty, and Deborah L. McGuinness, Editors, W3CRecommendation, 10 February 2004,http://www.w3.org/TR/2004/REC-owl-guide-20040210/ .Latestversion available at http://www.w3.org/TR/owl-guide/ .[OWLReference]OWL Web Ontology Language Reference, Mike Deanand Guus Schreiber, Editors, W3C Recommendation, 10 February 2004,http://www.w3.org/TR/2004/REC-owl-ref-20040210/ .Latest versionavailable at http://www.w3.org/TR/owl-ref/ .id="ref-owl-abstract-syntax-and-semantics">[OWL AbstractSyntax and Semantics]OWL Web Ontology Language Semantics and AbstractSyntax, Peter F. Patel-Schneider, Pat Hayes, andIan Horrocks, Editors, W3C Recommendation, 10 February 2004,http://www.w3.org/TR/2004/REC-owl-semantics-20040210/ .Latestversion available athttp://www.w3.org/TR/owl-semantics/ .[OWL Test]OWL Web Ontology Language Test Cases, Jeremy J.Carroll and Jos De Roo, Editors, W3C Recommendation, 10 February 2004,http://www.w3.org/TR/2004/REC-owl-test-20040210/ .Latest versionavailable at http://www.w3.org/TR/owl-test/ .id="ref-owl-requirements">[OWL Requirements]OWL Web Ontology Language Use Cases andRequirements, Jeff Heflin, Editor, W3CRecommendation, 10 February 2004,http://www.w3.org/TR/2004/REC-webont-req-20040210/ .Latestversion available at http://www.w3.org/TR/webont-req/ .[OWL Issues]Web Ontology Issue Status. Michael K.Smith, ed. 1 November 2003.[DAML+OILReference]DAML+OILReference Description . Dan Connolly, Frank vanHarmelen, Ian Horrocks, Deborah L. McGuinness, Peter F.Patel-Schneider, and Lynn Andrea Stein. W3C Note 18December 2001.[XML]Extensible MarkupLanguage (XML).[XML Schema]XMLSchema .name="ref-xml-schema2">[XML-SCHEMA2]XMLSchema Part 2: Datatypes - W3C Recommendation,World Wide Web Consortium, 2 May 2001.[RDF/XML Syntax]RDF/XML Syntax Specification (Revised), Dave Beckett, Editor, W3C Recommendation, 10 February 2004, http://www.w3.org/TR/2004/REC-rdf-syntax-grammar-20040210/ . Latest version available at http://www.w3.org/TR/rdf-syntax-grammar/ .[RDF Concepts]Resource Description Framework (RDF): Concepts and Abstract Syntax, Graham Klyne and Jeremy J. Carroll, Editors, W3C Recommendation, 10 February 2004, http://www.w3.org/TR/2004/REC-rdf-concepts-20040210/ . Latest version available at http://www.w3.org/TR/rdf-concepts/ .[RDF Schema]RDF Vocabulary Description Language 1.0: RDF Schema, Dan Brickley and R. V. Guha, Editors, W3C Recommendation, 10 February 2004, http://www.w3.org/TR/2004/REC-rdf-schema-20040210/ . Latest version available at http://www.w3.org/TR/rdf-schema/ .[RDF Semantics]RDF Semantics, Patrick Hayes, Editor, W3C Recommendation, 10 February 2004, http://www.w3.org/TR/2004/REC-rdf-mt-20040210/ . Latest version available at http://www.w3.org/TR/rdf-mt/ .name="DescriptionLogics">[Description Logics]TheDescription Logic Handbook. Franz Baader, DiegoCalvanese, Deborah McGuinness, Daniele Nardi, PeterPatel-Schneider, editors. Cambridge University Press, 2003;and Description LogicsHome Page.AcknowledgementsThis document is the result of extensive discussions withinthe Web OntologyWorking Group as a whole. The participants in thisWorking Group included: Yasser alSafadi, Jean-FrançoisBaget, James Barnette, Sean Bechhofer, Jonathan Borden,Frederik Brysse, Stephen Buswell, Jeremy Carroll, DanConnolly, Peter Crowther, Jonathan Dale, Jos De Roo, David DeRoure, Mike Dean, Larry Eshelman, Jérôme Euzenat,Tim Finin, Nicholas Gibbins, Sandro Hawke, Patrick Hayes,Jeff Heflin, Ziv Hellman, James Hendler, Bernard Horan,Masahiro Hori, Ian Horrocks, Jane Hunter, FrancescoIannuzzelli, Rüdiger Klein, Natasha Kravtsova, OraLassila, Massimo Marchiori, Deborah McGuinness, Enrico Motta,Leo Obrst, Mehrdad Omidvari, Martin Pike, Marwan Sabbouh,Guus Schreiber, Noboru Shimizu, Michael Sintek, Michael K.Smith, John Stanton, Lynn Andrea Stein, Herman ter Horst,David Trastour, Frank van Harmelen, Bernard Vatant, RaphaelVolz, Evan Wallace, Christopher Welty, Charles White, andJohn Yanosy.Change Log Since Last Call ReleaseAdded owl:Nothing to OWL Lite.Added pointer to last call document under titleChanged all links to owl-absyn to owl-semanticsIncorporated Lee Lacy's grammatical comments frompublic-webont-comments dated April 21, 2003.Incorporated Lee Lacy's other comments: annotationproperties, version properties, and other missing tags in2.2 (which got reorganised as a result)changed hasOffSpring example to hasDaughter (request ofMorten Frederiksen)incorporated all Lasilla's comment, including replacing"machine readability" by "machine interpretability" andvarious typo's.Added sentence on lower complexity class of OWL Lite, asproposed by Jim HendlerAdded first sentence to section 1, after Sandro Hawke'scommentRestored link to style fileAdded link to test document and May 1 versionAdded references sectionChanged back to relative references to sectionsChanged links to http://www.w3.org/TR/xx from previousversions with updates later to ...TR/2003/CR-xx-20030818/Change Log Since CandidateRecommendationAdded Change Log since candidate recommendation.Deleted Control Ms at the end of all lines.Incorporated Jeff Rafter'spublic webont comments.Updated Status, Document links, date of publication, etc.according to PRemail from chair.Change Log Since ProposedRecommendationTwo broken links fixed - W3C icon was referenced byreferring to local W3c expansion src="OWL Web OntologyLanguage Overview_files/ as was gif for author. Added fullexpansion to W3C icon (http://www.w3.org/Icons/w3c_home)and email gif(http://www.w3.org/2001/sw/WebOnt/guide-src/Email.Deborah.McGuinness.gif).Removed control Ms at the end of every line introduced withnew version transfer.Added links to previous version in December 2003.Updated document taking Lee Lacy's comments dated January12, 2004. (Comments mostly small editorial changes, cellspacing change of 30 to 27 in table, ...)Included Benjamin Nowack's editorial comments.Updated Reference format.